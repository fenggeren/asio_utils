// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPGServer.proto

#ifndef PROTOBUF_INCLUDED_CPGServer_2eproto
#define PROTOBUF_INCLUDED_CPGServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CPGServer_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_CPGServer_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_CPGServer_2eproto();
namespace CPGServer {
class CancelMatchRQ;
class CancelMatchRQDefaultTypeInternal;
extern CancelMatchRQDefaultTypeInternal _CancelMatchRQ_default_instance_;
class CancelMatchRS;
class CancelMatchRSDefaultTypeInternal;
extern CancelMatchRSDefaultTypeInternal _CancelMatchRS_default_instance_;
class CheckMatchDistributeRQ;
class CheckMatchDistributeRQDefaultTypeInternal;
extern CheckMatchDistributeRQDefaultTypeInternal _CheckMatchDistributeRQ_default_instance_;
class CheckMatchDistributeRS;
class CheckMatchDistributeRSDefaultTypeInternal;
extern CheckMatchDistributeRSDefaultTypeInternal _CheckMatchDistributeRS_default_instance_;
class CreateMatchRQ;
class CreateMatchRQDefaultTypeInternal;
extern CreateMatchRQDefaultTypeInternal _CreateMatchRQ_default_instance_;
class CreateMatchRQ_PropertiesEntry_DoNotUse;
class CreateMatchRQ_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern CreateMatchRQ_PropertiesEntry_DoNotUseDefaultTypeInternal _CreateMatchRQ_PropertiesEntry_DoNotUse_default_instance_;
class CreateMatchRS;
class CreateMatchRSDefaultTypeInternal;
extern CreateMatchRSDefaultTypeInternal _CreateMatchRS_default_instance_;
class CreateMatchRS_PropertiesEntry_DoNotUse;
class CreateMatchRS_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern CreateMatchRS_PropertiesEntry_DoNotUseDefaultTypeInternal _CreateMatchRS_PropertiesEntry_DoNotUse_default_instance_;
class GateServerInfo;
class GateServerInfoDefaultTypeInternal;
extern GateServerInfoDefaultTypeInternal _GateServerInfo_default_instance_;
class NewConnServiceNotify;
class NewConnServiceNotifyDefaultTypeInternal;
extern NewConnServiceNotifyDefaultTypeInternal _NewConnServiceNotify_default_instance_;
class ServerAllMatchDistributeNotify;
class ServerAllMatchDistributeNotifyDefaultTypeInternal;
extern ServerAllMatchDistributeNotifyDefaultTypeInternal _ServerAllMatchDistributeNotify_default_instance_;
class ServerInfo;
class ServerInfoDefaultTypeInternal;
extern ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
class ServerLoginRQ;
class ServerLoginRQDefaultTypeInternal;
extern ServerLoginRQDefaultTypeInternal _ServerLoginRQ_default_instance_;
class ServerLoginRS;
class ServerLoginRSDefaultTypeInternal;
extern ServerLoginRSDefaultTypeInternal _ServerLoginRS_default_instance_;
class ServerRegisterRQ;
class ServerRegisterRQDefaultTypeInternal;
extern ServerRegisterRQDefaultTypeInternal _ServerRegisterRQ_default_instance_;
class ServerRegisterRS;
class ServerRegisterRSDefaultTypeInternal;
extern ServerRegisterRSDefaultTypeInternal _ServerRegisterRS_default_instance_;
class ServiceMatchDistibuteNotify;
class ServiceMatchDistibuteNotifyDefaultTypeInternal;
extern ServiceMatchDistibuteNotifyDefaultTypeInternal _ServiceMatchDistibuteNotify_default_instance_;
class UpdateMatchRQ;
class UpdateMatchRQDefaultTypeInternal;
extern UpdateMatchRQDefaultTypeInternal _UpdateMatchRQ_default_instance_;
class UpdateMatchRQ_PropertiesEntry_DoNotUse;
class UpdateMatchRQ_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern UpdateMatchRQ_PropertiesEntry_DoNotUseDefaultTypeInternal _UpdateMatchRQ_PropertiesEntry_DoNotUse_default_instance_;
class UpdateMatchRS;
class UpdateMatchRSDefaultTypeInternal;
extern UpdateMatchRSDefaultTypeInternal _UpdateMatchRS_default_instance_;
}  // namespace CPGServer
namespace google {
namespace protobuf {
template<> ::CPGServer::CancelMatchRQ* Arena::CreateMaybeMessage<::CPGServer::CancelMatchRQ>(Arena*);
template<> ::CPGServer::CancelMatchRS* Arena::CreateMaybeMessage<::CPGServer::CancelMatchRS>(Arena*);
template<> ::CPGServer::CheckMatchDistributeRQ* Arena::CreateMaybeMessage<::CPGServer::CheckMatchDistributeRQ>(Arena*);
template<> ::CPGServer::CheckMatchDistributeRS* Arena::CreateMaybeMessage<::CPGServer::CheckMatchDistributeRS>(Arena*);
template<> ::CPGServer::CreateMatchRQ* Arena::CreateMaybeMessage<::CPGServer::CreateMatchRQ>(Arena*);
template<> ::CPGServer::CreateMatchRQ_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage<::CPGServer::CreateMatchRQ_PropertiesEntry_DoNotUse>(Arena*);
template<> ::CPGServer::CreateMatchRS* Arena::CreateMaybeMessage<::CPGServer::CreateMatchRS>(Arena*);
template<> ::CPGServer::CreateMatchRS_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage<::CPGServer::CreateMatchRS_PropertiesEntry_DoNotUse>(Arena*);
template<> ::CPGServer::GateServerInfo* Arena::CreateMaybeMessage<::CPGServer::GateServerInfo>(Arena*);
template<> ::CPGServer::NewConnServiceNotify* Arena::CreateMaybeMessage<::CPGServer::NewConnServiceNotify>(Arena*);
template<> ::CPGServer::ServerAllMatchDistributeNotify* Arena::CreateMaybeMessage<::CPGServer::ServerAllMatchDistributeNotify>(Arena*);
template<> ::CPGServer::ServerInfo* Arena::CreateMaybeMessage<::CPGServer::ServerInfo>(Arena*);
template<> ::CPGServer::ServerLoginRQ* Arena::CreateMaybeMessage<::CPGServer::ServerLoginRQ>(Arena*);
template<> ::CPGServer::ServerLoginRS* Arena::CreateMaybeMessage<::CPGServer::ServerLoginRS>(Arena*);
template<> ::CPGServer::ServerRegisterRQ* Arena::CreateMaybeMessage<::CPGServer::ServerRegisterRQ>(Arena*);
template<> ::CPGServer::ServerRegisterRS* Arena::CreateMaybeMessage<::CPGServer::ServerRegisterRS>(Arena*);
template<> ::CPGServer::ServiceMatchDistibuteNotify* Arena::CreateMaybeMessage<::CPGServer::ServiceMatchDistibuteNotify>(Arena*);
template<> ::CPGServer::UpdateMatchRQ* Arena::CreateMaybeMessage<::CPGServer::UpdateMatchRQ>(Arena*);
template<> ::CPGServer::UpdateMatchRQ_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage<::CPGServer::UpdateMatchRQ_PropertiesEntry_DoNotUse>(Arena*);
template<> ::CPGServer::UpdateMatchRS* Arena::CreateMaybeMessage<::CPGServer::UpdateMatchRS>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CPGServer {

// ===================================================================

class ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerInfo(ServerInfo&& from) noexcept
    : ServerInfo() {
    *this = ::std::move(from);
  }

  inline ServerInfo& operator=(ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerInfo* internal_default_instance() {
    return reinterpret_cast<const ServerInfo*>(
               &_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServerInfo* other);
  friend void swap(ServerInfo& a, ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const final {
    return CreateMaybeMessage<ServerInfo>(NULL);
  }

  ServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 sid = 3;
  void clear_sid();
  static const int kSidFieldNumber = 3;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 sid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServerRegisterRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerRegisterRQ) */ {
 public:
  ServerRegisterRQ();
  virtual ~ServerRegisterRQ();

  ServerRegisterRQ(const ServerRegisterRQ& from);

  inline ServerRegisterRQ& operator=(const ServerRegisterRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRegisterRQ(ServerRegisterRQ&& from) noexcept
    : ServerRegisterRQ() {
    *this = ::std::move(from);
  }

  inline ServerRegisterRQ& operator=(ServerRegisterRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerRegisterRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRegisterRQ* internal_default_instance() {
    return reinterpret_cast<const ServerRegisterRQ*>(
               &_ServerRegisterRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ServerRegisterRQ* other);
  friend void swap(ServerRegisterRQ& a, ServerRegisterRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRegisterRQ* New() const final {
    return CreateMaybeMessage<ServerRegisterRQ>(NULL);
  }

  ServerRegisterRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRegisterRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRegisterRQ& from);
  void MergeFrom(const ServerRegisterRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRegisterRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 connectTypes = 3;
  int connecttypes_size() const;
  void clear_connecttypes();
  static const int kConnectTypesFieldNumber = 3;
  ::google::protobuf::int32 connecttypes(int index) const;
  void set_connecttypes(int index, ::google::protobuf::int32 value);
  void add_connecttypes(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      connecttypes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_connecttypes();

  // repeated .CPGServer.ServerInfo listeners = 4;
  int listeners_size() const;
  void clear_listeners();
  static const int kListenersFieldNumber = 4;
  ::CPGServer::ServerInfo* mutable_listeners(int index);
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
      mutable_listeners();
  const ::CPGServer::ServerInfo& listeners(int index) const;
  ::CPGServer::ServerInfo* add_listeners();
  const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
      listeners() const;

  // int32 sid = 1;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServerRegisterRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > connecttypes_;
  mutable std::atomic<int> _connecttypes_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo > listeners_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServerRegisterRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerRegisterRS) */ {
 public:
  ServerRegisterRS();
  virtual ~ServerRegisterRS();

  ServerRegisterRS(const ServerRegisterRS& from);

  inline ServerRegisterRS& operator=(const ServerRegisterRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRegisterRS(ServerRegisterRS&& from) noexcept
    : ServerRegisterRS() {
    *this = ::std::move(from);
  }

  inline ServerRegisterRS& operator=(ServerRegisterRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerRegisterRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRegisterRS* internal_default_instance() {
    return reinterpret_cast<const ServerRegisterRS*>(
               &_ServerRegisterRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ServerRegisterRS* other);
  friend void swap(ServerRegisterRS& a, ServerRegisterRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRegisterRS* New() const final {
    return CreateMaybeMessage<ServerRegisterRS>(NULL);
  }

  ServerRegisterRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRegisterRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRegisterRS& from);
  void MergeFrom(const ServerRegisterRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRegisterRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CPGServer.ServerInfo connServers = 3;
  int connservers_size() const;
  void clear_connservers();
  static const int kConnServersFieldNumber = 3;
  ::CPGServer::ServerInfo* mutable_connservers(int index);
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
      mutable_connservers();
  const ::CPGServer::ServerInfo& connservers(int index) const;
  ::CPGServer::ServerInfo* add_connservers();
  const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
      connservers() const;

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 sid = 2;
  void clear_sid();
  static const int kSidFieldNumber = 2;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServerRegisterRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo > connservers_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 sid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class NewConnServiceNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.NewConnServiceNotify) */ {
 public:
  NewConnServiceNotify();
  virtual ~NewConnServiceNotify();

  NewConnServiceNotify(const NewConnServiceNotify& from);

  inline NewConnServiceNotify& operator=(const NewConnServiceNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewConnServiceNotify(NewConnServiceNotify&& from) noexcept
    : NewConnServiceNotify() {
    *this = ::std::move(from);
  }

  inline NewConnServiceNotify& operator=(NewConnServiceNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NewConnServiceNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewConnServiceNotify* internal_default_instance() {
    return reinterpret_cast<const NewConnServiceNotify*>(
               &_NewConnServiceNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(NewConnServiceNotify* other);
  friend void swap(NewConnServiceNotify& a, NewConnServiceNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewConnServiceNotify* New() const final {
    return CreateMaybeMessage<NewConnServiceNotify>(NULL);
  }

  NewConnServiceNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewConnServiceNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewConnServiceNotify& from);
  void MergeFrom(const NewConnServiceNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewConnServiceNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CPGServer.ServerInfo connServers = 1;
  int connservers_size() const;
  void clear_connservers();
  static const int kConnServersFieldNumber = 1;
  ::CPGServer::ServerInfo* mutable_connservers(int index);
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
      mutable_connservers();
  const ::CPGServer::ServerInfo& connservers(int index) const;
  ::CPGServer::ServerInfo* add_connservers();
  const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
      connservers() const;

  // @@protoc_insertion_point(class_scope:CPGServer.NewConnServiceNotify)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo > connservers_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class GateServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.GateServerInfo) */ {
 public:
  GateServerInfo();
  virtual ~GateServerInfo();

  GateServerInfo(const GateServerInfo& from);

  inline GateServerInfo& operator=(const GateServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateServerInfo(GateServerInfo&& from) noexcept
    : GateServerInfo() {
    *this = ::std::move(from);
  }

  inline GateServerInfo& operator=(GateServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GateServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateServerInfo* internal_default_instance() {
    return reinterpret_cast<const GateServerInfo*>(
               &_GateServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GateServerInfo* other);
  friend void swap(GateServerInfo& a, GateServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateServerInfo* New() const final {
    return CreateMaybeMessage<GateServerInfo>(NULL);
  }

  GateServerInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateServerInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateServerInfo& from);
  void MergeFrom(const GateServerInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string exportIP = 4;
  void clear_exportip();
  static const int kExportIPFieldNumber = 4;
  const ::std::string& exportip() const;
  void set_exportip(const ::std::string& value);
  #if LANG_CXX11
  void set_exportip(::std::string&& value);
  #endif
  void set_exportip(const char* value);
  void set_exportip(const char* value, size_t size);
  ::std::string* mutable_exportip();
  ::std::string* release_exportip();
  void set_allocated_exportip(::std::string* exportip);

  // int32 port = 1;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 sid = 2;
  void clear_sid();
  static const int kSidFieldNumber = 2;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.GateServerInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr exportip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 sid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServerLoginRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerLoginRQ) */ {
 public:
  ServerLoginRQ();
  virtual ~ServerLoginRQ();

  ServerLoginRQ(const ServerLoginRQ& from);

  inline ServerLoginRQ& operator=(const ServerLoginRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerLoginRQ(ServerLoginRQ&& from) noexcept
    : ServerLoginRQ() {
    *this = ::std::move(from);
  }

  inline ServerLoginRQ& operator=(ServerLoginRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerLoginRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerLoginRQ* internal_default_instance() {
    return reinterpret_cast<const ServerLoginRQ*>(
               &_ServerLoginRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ServerLoginRQ* other);
  friend void swap(ServerLoginRQ& a, ServerLoginRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerLoginRQ* New() const final {
    return CreateMaybeMessage<ServerLoginRQ>(NULL);
  }

  ServerLoginRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerLoginRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerLoginRQ& from);
  void MergeFrom(const ServerLoginRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerLoginRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 cid = 1;
  void clear_cid();
  static const int kCidFieldNumber = 1;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // int32 sid = 2;
  void clear_sid();
  static const int kSidFieldNumber = 2;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServerLoginRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::int32 sid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServerLoginRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerLoginRS) */ {
 public:
  ServerLoginRS();
  virtual ~ServerLoginRS();

  ServerLoginRS(const ServerLoginRS& from);

  inline ServerLoginRS& operator=(const ServerLoginRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerLoginRS(ServerLoginRS&& from) noexcept
    : ServerLoginRS() {
    *this = ::std::move(from);
  }

  inline ServerLoginRS& operator=(ServerLoginRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerLoginRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerLoginRS* internal_default_instance() {
    return reinterpret_cast<const ServerLoginRS*>(
               &_ServerLoginRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ServerLoginRS* other);
  friend void swap(ServerLoginRS& a, ServerLoginRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerLoginRS* New() const final {
    return CreateMaybeMessage<ServerLoginRS>(NULL);
  }

  ServerLoginRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerLoginRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerLoginRS& from);
  void MergeFrom(const ServerLoginRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerLoginRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CPGServer.GateServerInfo gsinfo = 3;
  bool has_gsinfo() const;
  void clear_gsinfo();
  static const int kGsinfoFieldNumber = 3;
  const ::CPGServer::GateServerInfo& gsinfo() const;
  ::CPGServer::GateServerInfo* release_gsinfo();
  ::CPGServer::GateServerInfo* mutable_gsinfo();
  void set_allocated_gsinfo(::CPGServer::GateServerInfo* gsinfo);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 cid = 2;
  void clear_cid();
  static const int kCidFieldNumber = 2;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServerLoginRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CPGServer::GateServerInfo* gsinfo_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 cid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServiceMatchDistibuteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServiceMatchDistibuteNotify) */ {
 public:
  ServiceMatchDistibuteNotify();
  virtual ~ServiceMatchDistibuteNotify();

  ServiceMatchDistibuteNotify(const ServiceMatchDistibuteNotify& from);

  inline ServiceMatchDistibuteNotify& operator=(const ServiceMatchDistibuteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServiceMatchDistibuteNotify(ServiceMatchDistibuteNotify&& from) noexcept
    : ServiceMatchDistibuteNotify() {
    *this = ::std::move(from);
  }

  inline ServiceMatchDistibuteNotify& operator=(ServiceMatchDistibuteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServiceMatchDistibuteNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceMatchDistibuteNotify* internal_default_instance() {
    return reinterpret_cast<const ServiceMatchDistibuteNotify*>(
               &_ServiceMatchDistibuteNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ServiceMatchDistibuteNotify* other);
  friend void swap(ServiceMatchDistibuteNotify& a, ServiceMatchDistibuteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServiceMatchDistibuteNotify* New() const final {
    return CreateMaybeMessage<ServiceMatchDistibuteNotify>(NULL);
  }

  ServiceMatchDistibuteNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServiceMatchDistibuteNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServiceMatchDistibuteNotify& from);
  void MergeFrom(const ServiceMatchDistibuteNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceMatchDistibuteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 mid = 2;
  int mid_size() const;
  void clear_mid();
  static const int kMidFieldNumber = 2;
  ::google::protobuf::int32 mid(int index) const;
  void set_mid(int index, ::google::protobuf::int32 value);
  void add_mid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mid();

  // int32 sid = 1;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.ServiceMatchDistibuteNotify)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mid_;
  mutable std::atomic<int> _mid_cached_byte_size_;
  ::google::protobuf::int32 sid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class ServerAllMatchDistributeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.ServerAllMatchDistributeNotify) */ {
 public:
  ServerAllMatchDistributeNotify();
  virtual ~ServerAllMatchDistributeNotify();

  ServerAllMatchDistributeNotify(const ServerAllMatchDistributeNotify& from);

  inline ServerAllMatchDistributeNotify& operator=(const ServerAllMatchDistributeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerAllMatchDistributeNotify(ServerAllMatchDistributeNotify&& from) noexcept
    : ServerAllMatchDistributeNotify() {
    *this = ::std::move(from);
  }

  inline ServerAllMatchDistributeNotify& operator=(ServerAllMatchDistributeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ServerAllMatchDistributeNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerAllMatchDistributeNotify* internal_default_instance() {
    return reinterpret_cast<const ServerAllMatchDistributeNotify*>(
               &_ServerAllMatchDistributeNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ServerAllMatchDistributeNotify* other);
  friend void swap(ServerAllMatchDistributeNotify& a, ServerAllMatchDistributeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerAllMatchDistributeNotify* New() const final {
    return CreateMaybeMessage<ServerAllMatchDistributeNotify>(NULL);
  }

  ServerAllMatchDistributeNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerAllMatchDistributeNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerAllMatchDistributeNotify& from);
  void MergeFrom(const ServerAllMatchDistributeNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerAllMatchDistributeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CPGServer.ServiceMatchDistibuteNotify services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  ::CPGServer::ServiceMatchDistibuteNotify* mutable_services(int index);
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServiceMatchDistibuteNotify >*
      mutable_services();
  const ::CPGServer::ServiceMatchDistibuteNotify& services(int index) const;
  ::CPGServer::ServiceMatchDistibuteNotify* add_services();
  const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServiceMatchDistibuteNotify >&
      services() const;

  // @@protoc_insertion_point(class_scope:CPGServer.ServerAllMatchDistributeNotify)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CPGServer::ServiceMatchDistibuteNotify > services_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CheckMatchDistributeRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CheckMatchDistributeRQ) */ {
 public:
  CheckMatchDistributeRQ();
  virtual ~CheckMatchDistributeRQ();

  CheckMatchDistributeRQ(const CheckMatchDistributeRQ& from);

  inline CheckMatchDistributeRQ& operator=(const CheckMatchDistributeRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckMatchDistributeRQ(CheckMatchDistributeRQ&& from) noexcept
    : CheckMatchDistributeRQ() {
    *this = ::std::move(from);
  }

  inline CheckMatchDistributeRQ& operator=(CheckMatchDistributeRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckMatchDistributeRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckMatchDistributeRQ* internal_default_instance() {
    return reinterpret_cast<const CheckMatchDistributeRQ*>(
               &_CheckMatchDistributeRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CheckMatchDistributeRQ* other);
  friend void swap(CheckMatchDistributeRQ& a, CheckMatchDistributeRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckMatchDistributeRQ* New() const final {
    return CreateMaybeMessage<CheckMatchDistributeRQ>(NULL);
  }

  CheckMatchDistributeRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckMatchDistributeRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckMatchDistributeRQ& from);
  void MergeFrom(const CheckMatchDistributeRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckMatchDistributeRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 mids = 3;
  int mids_size() const;
  void clear_mids();
  static const int kMidsFieldNumber = 3;
  ::google::protobuf::int32 mids(int index) const;
  void set_mids(int index, ::google::protobuf::int32 value);
  void add_mids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mids();

  // int32 sid = 1;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.CheckMatchDistributeRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mids_;
  mutable std::atomic<int> _mids_cached_byte_size_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CheckMatchDistributeRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CheckMatchDistributeRS) */ {
 public:
  CheckMatchDistributeRS();
  virtual ~CheckMatchDistributeRS();

  CheckMatchDistributeRS(const CheckMatchDistributeRS& from);

  inline CheckMatchDistributeRS& operator=(const CheckMatchDistributeRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckMatchDistributeRS(CheckMatchDistributeRS&& from) noexcept
    : CheckMatchDistributeRS() {
    *this = ::std::move(from);
  }

  inline CheckMatchDistributeRS& operator=(CheckMatchDistributeRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckMatchDistributeRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckMatchDistributeRS* internal_default_instance() {
    return reinterpret_cast<const CheckMatchDistributeRS*>(
               &_CheckMatchDistributeRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CheckMatchDistributeRS* other);
  friend void swap(CheckMatchDistributeRS& a, CheckMatchDistributeRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckMatchDistributeRS* New() const final {
    return CreateMaybeMessage<CheckMatchDistributeRS>(NULL);
  }

  CheckMatchDistributeRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckMatchDistributeRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckMatchDistributeRS& from);
  void MergeFrom(const CheckMatchDistributeRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckMatchDistributeRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 mids = 4;
  int mids_size() const;
  void clear_mids();
  static const int kMidsFieldNumber = 4;
  ::google::protobuf::int32 mids(int index) const;
  void set_mids(int index, ::google::protobuf::int32 value);
  void add_mids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mids();

  // int32 sid = 1;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.CheckMatchDistributeRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mids_;
  mutable std::atomic<int> _mids_cached_byte_size_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CancelMatchRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CancelMatchRQ) */ {
 public:
  CancelMatchRQ();
  virtual ~CancelMatchRQ();

  CancelMatchRQ(const CancelMatchRQ& from);

  inline CancelMatchRQ& operator=(const CancelMatchRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelMatchRQ(CancelMatchRQ&& from) noexcept
    : CancelMatchRQ() {
    *this = ::std::move(from);
  }

  inline CancelMatchRQ& operator=(CancelMatchRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CancelMatchRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelMatchRQ* internal_default_instance() {
    return reinterpret_cast<const CancelMatchRQ*>(
               &_CancelMatchRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CancelMatchRQ* other);
  friend void swap(CancelMatchRQ& a, CancelMatchRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelMatchRQ* New() const final {
    return CreateMaybeMessage<CancelMatchRQ>(NULL);
  }

  CancelMatchRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CancelMatchRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CancelMatchRQ& from);
  void MergeFrom(const CancelMatchRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelMatchRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.CancelMatchRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 reason_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CancelMatchRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CancelMatchRS) */ {
 public:
  CancelMatchRS();
  virtual ~CancelMatchRS();

  CancelMatchRS(const CancelMatchRS& from);

  inline CancelMatchRS& operator=(const CancelMatchRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelMatchRS(CancelMatchRS&& from) noexcept
    : CancelMatchRS() {
    *this = ::std::move(from);
  }

  inline CancelMatchRS& operator=(CancelMatchRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CancelMatchRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelMatchRS* internal_default_instance() {
    return reinterpret_cast<const CancelMatchRS*>(
               &_CancelMatchRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CancelMatchRS* other);
  friend void swap(CancelMatchRS& a, CancelMatchRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelMatchRS* New() const final {
    return CreateMaybeMessage<CancelMatchRS>(NULL);
  }

  CancelMatchRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CancelMatchRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CancelMatchRS& from);
  void MergeFrom(const CancelMatchRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelMatchRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.CancelMatchRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class UpdateMatchRQ_PropertiesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<UpdateMatchRQ_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<UpdateMatchRQ_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  UpdateMatchRQ_PropertiesEntry_DoNotUse();
  UpdateMatchRQ_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const UpdateMatchRQ_PropertiesEntry_DoNotUse& other);
  static const UpdateMatchRQ_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const UpdateMatchRQ_PropertiesEntry_DoNotUse*>(&_UpdateMatchRQ_PropertiesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class UpdateMatchRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.UpdateMatchRQ) */ {
 public:
  UpdateMatchRQ();
  virtual ~UpdateMatchRQ();

  UpdateMatchRQ(const UpdateMatchRQ& from);

  inline UpdateMatchRQ& operator=(const UpdateMatchRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateMatchRQ(UpdateMatchRQ&& from) noexcept
    : UpdateMatchRQ() {
    *this = ::std::move(from);
  }

  inline UpdateMatchRQ& operator=(UpdateMatchRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateMatchRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateMatchRQ* internal_default_instance() {
    return reinterpret_cast<const UpdateMatchRQ*>(
               &_UpdateMatchRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(UpdateMatchRQ* other);
  friend void swap(UpdateMatchRQ& a, UpdateMatchRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateMatchRQ* New() const final {
    return CreateMaybeMessage<UpdateMatchRQ>(NULL);
  }

  UpdateMatchRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateMatchRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateMatchRQ& from);
  void MergeFrom(const UpdateMatchRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateMatchRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> properties = 2;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      properties() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_properties();

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.UpdateMatchRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      UpdateMatchRQ_PropertiesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > properties_;
  ::google::protobuf::int32 mid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class UpdateMatchRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.UpdateMatchRS) */ {
 public:
  UpdateMatchRS();
  virtual ~UpdateMatchRS();

  UpdateMatchRS(const UpdateMatchRS& from);

  inline UpdateMatchRS& operator=(const UpdateMatchRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateMatchRS(UpdateMatchRS&& from) noexcept
    : UpdateMatchRS() {
    *this = ::std::move(from);
  }

  inline UpdateMatchRS& operator=(UpdateMatchRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateMatchRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateMatchRS* internal_default_instance() {
    return reinterpret_cast<const UpdateMatchRS*>(
               &_UpdateMatchRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UpdateMatchRS* other);
  friend void swap(UpdateMatchRS& a, UpdateMatchRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateMatchRS* New() const final {
    return CreateMaybeMessage<UpdateMatchRS>(NULL);
  }

  UpdateMatchRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateMatchRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateMatchRS& from);
  void MergeFrom(const UpdateMatchRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateMatchRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGServer.UpdateMatchRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CreateMatchRQ_PropertiesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CreateMatchRQ_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<CreateMatchRQ_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  CreateMatchRQ_PropertiesEntry_DoNotUse();
  CreateMatchRQ_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CreateMatchRQ_PropertiesEntry_DoNotUse& other);
  static const CreateMatchRQ_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CreateMatchRQ_PropertiesEntry_DoNotUse*>(&_CreateMatchRQ_PropertiesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CreateMatchRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CreateMatchRQ) */ {
 public:
  CreateMatchRQ();
  virtual ~CreateMatchRQ();

  CreateMatchRQ(const CreateMatchRQ& from);

  inline CreateMatchRQ& operator=(const CreateMatchRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMatchRQ(CreateMatchRQ&& from) noexcept
    : CreateMatchRQ() {
    *this = ::std::move(from);
  }

  inline CreateMatchRQ& operator=(CreateMatchRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateMatchRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateMatchRQ* internal_default_instance() {
    return reinterpret_cast<const CreateMatchRQ*>(
               &_CreateMatchRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CreateMatchRQ* other);
  friend void swap(CreateMatchRQ& a, CreateMatchRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMatchRQ* New() const final {
    return CreateMaybeMessage<CreateMatchRQ>(NULL);
  }

  CreateMatchRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateMatchRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateMatchRQ& from);
  void MergeFrom(const CreateMatchRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateMatchRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> properties = 1;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      properties() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_properties();

  // @@protoc_insertion_point(class_scope:CPGServer.CreateMatchRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      CreateMatchRQ_PropertiesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > properties_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// -------------------------------------------------------------------

class CreateMatchRS_PropertiesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CreateMatchRS_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<CreateMatchRS_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  CreateMatchRS_PropertiesEntry_DoNotUse();
  CreateMatchRS_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CreateMatchRS_PropertiesEntry_DoNotUse& other);
  static const CreateMatchRS_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CreateMatchRS_PropertiesEntry_DoNotUse*>(&_CreateMatchRS_PropertiesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CreateMatchRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGServer.CreateMatchRS) */ {
 public:
  CreateMatchRS();
  virtual ~CreateMatchRS();

  CreateMatchRS(const CreateMatchRS& from);

  inline CreateMatchRS& operator=(const CreateMatchRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMatchRS(CreateMatchRS&& from) noexcept
    : CreateMatchRS() {
    *this = ::std::move(from);
  }

  inline CreateMatchRS& operator=(CreateMatchRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateMatchRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateMatchRS* internal_default_instance() {
    return reinterpret_cast<const CreateMatchRS*>(
               &_CreateMatchRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CreateMatchRS* other);
  friend void swap(CreateMatchRS& a, CreateMatchRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMatchRS* New() const final {
    return CreateMaybeMessage<CreateMatchRS>(NULL);
  }

  CreateMatchRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateMatchRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateMatchRS& from);
  void MergeFrom(const CreateMatchRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateMatchRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> properties = 1;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      properties() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_properties();

  // @@protoc_insertion_point(class_scope:CPGServer.CreateMatchRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      CreateMatchRS_PropertiesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > properties_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerInfo

// int32 type = 1;
inline void ServerInfo::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::type() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerInfo.type)
  return type_;
}
inline void ServerInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerInfo.type)
}

// int32 port = 2;
inline void ServerInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::port() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerInfo.port)
  return port_;
}
inline void ServerInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerInfo.port)
}

// int32 sid = 3;
inline void ServerInfo::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerInfo.sid)
  return sid_;
}
inline void ServerInfo::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerInfo.sid)
}

// string ip = 4;
inline void ServerInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerInfo.ip)
  return ip_.GetNoArena();
}
inline void ServerInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CPGServer.ServerInfo.ip)
}
#if LANG_CXX11
inline void ServerInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CPGServer.ServerInfo.ip)
}
#endif
inline void ServerInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CPGServer.ServerInfo.ip)
}
inline void ServerInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CPGServer.ServerInfo.ip)
}
inline ::std::string* ServerInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CPGServer.ServerInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_ip() {
  // @@protoc_insertion_point(field_release:CPGServer.ServerInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CPGServer.ServerInfo.ip)
}

// -------------------------------------------------------------------

// ServerRegisterRQ

// int32 sid = 1;
inline void ServerRegisterRQ::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRQ::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRQ.sid)
  return sid_;
}
inline void ServerRegisterRQ::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerRegisterRQ.sid)
}

// int32 type = 2;
inline void ServerRegisterRQ::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRQ::type() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRQ.type)
  return type_;
}
inline void ServerRegisterRQ::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerRegisterRQ.type)
}

// repeated int32 connectTypes = 3;
inline int ServerRegisterRQ::connecttypes_size() const {
  return connecttypes_.size();
}
inline void ServerRegisterRQ::clear_connecttypes() {
  connecttypes_.Clear();
}
inline ::google::protobuf::int32 ServerRegisterRQ::connecttypes(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRQ.connectTypes)
  return connecttypes_.Get(index);
}
inline void ServerRegisterRQ::set_connecttypes(int index, ::google::protobuf::int32 value) {
  connecttypes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CPGServer.ServerRegisterRQ.connectTypes)
}
inline void ServerRegisterRQ::add_connecttypes(::google::protobuf::int32 value) {
  connecttypes_.Add(value);
  // @@protoc_insertion_point(field_add:CPGServer.ServerRegisterRQ.connectTypes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServerRegisterRQ::connecttypes() const {
  // @@protoc_insertion_point(field_list:CPGServer.ServerRegisterRQ.connectTypes)
  return connecttypes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServerRegisterRQ::mutable_connecttypes() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.ServerRegisterRQ.connectTypes)
  return &connecttypes_;
}

// repeated .CPGServer.ServerInfo listeners = 4;
inline int ServerRegisterRQ::listeners_size() const {
  return listeners_.size();
}
inline void ServerRegisterRQ::clear_listeners() {
  listeners_.Clear();
}
inline ::CPGServer::ServerInfo* ServerRegisterRQ::mutable_listeners(int index) {
  // @@protoc_insertion_point(field_mutable:CPGServer.ServerRegisterRQ.listeners)
  return listeners_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
ServerRegisterRQ::mutable_listeners() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.ServerRegisterRQ.listeners)
  return &listeners_;
}
inline const ::CPGServer::ServerInfo& ServerRegisterRQ::listeners(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRQ.listeners)
  return listeners_.Get(index);
}
inline ::CPGServer::ServerInfo* ServerRegisterRQ::add_listeners() {
  // @@protoc_insertion_point(field_add:CPGServer.ServerRegisterRQ.listeners)
  return listeners_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
ServerRegisterRQ::listeners() const {
  // @@protoc_insertion_point(field_list:CPGServer.ServerRegisterRQ.listeners)
  return listeners_;
}

// -------------------------------------------------------------------

// ServerRegisterRS

// int32 result = 1;
inline void ServerRegisterRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRS::result() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRS.result)
  return result_;
}
inline void ServerRegisterRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerRegisterRS.result)
}

// int32 sid = 2;
inline void ServerRegisterRS::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRS::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRS.sid)
  return sid_;
}
inline void ServerRegisterRS::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerRegisterRS.sid)
}

// repeated .CPGServer.ServerInfo connServers = 3;
inline int ServerRegisterRS::connservers_size() const {
  return connservers_.size();
}
inline void ServerRegisterRS::clear_connservers() {
  connservers_.Clear();
}
inline ::CPGServer::ServerInfo* ServerRegisterRS::mutable_connservers(int index) {
  // @@protoc_insertion_point(field_mutable:CPGServer.ServerRegisterRS.connServers)
  return connservers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
ServerRegisterRS::mutable_connservers() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.ServerRegisterRS.connServers)
  return &connservers_;
}
inline const ::CPGServer::ServerInfo& ServerRegisterRS::connservers(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerRegisterRS.connServers)
  return connservers_.Get(index);
}
inline ::CPGServer::ServerInfo* ServerRegisterRS::add_connservers() {
  // @@protoc_insertion_point(field_add:CPGServer.ServerRegisterRS.connServers)
  return connservers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
ServerRegisterRS::connservers() const {
  // @@protoc_insertion_point(field_list:CPGServer.ServerRegisterRS.connServers)
  return connservers_;
}

// -------------------------------------------------------------------

// NewConnServiceNotify

// repeated .CPGServer.ServerInfo connServers = 1;
inline int NewConnServiceNotify::connservers_size() const {
  return connservers_.size();
}
inline void NewConnServiceNotify::clear_connservers() {
  connservers_.Clear();
}
inline ::CPGServer::ServerInfo* NewConnServiceNotify::mutable_connservers(int index) {
  // @@protoc_insertion_point(field_mutable:CPGServer.NewConnServiceNotify.connServers)
  return connservers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >*
NewConnServiceNotify::mutable_connservers() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.NewConnServiceNotify.connServers)
  return &connservers_;
}
inline const ::CPGServer::ServerInfo& NewConnServiceNotify::connservers(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.NewConnServiceNotify.connServers)
  return connservers_.Get(index);
}
inline ::CPGServer::ServerInfo* NewConnServiceNotify::add_connservers() {
  // @@protoc_insertion_point(field_add:CPGServer.NewConnServiceNotify.connServers)
  return connservers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServerInfo >&
NewConnServiceNotify::connservers() const {
  // @@protoc_insertion_point(field_list:CPGServer.NewConnServiceNotify.connServers)
  return connservers_;
}

// -------------------------------------------------------------------

// GateServerInfo

// int32 port = 1;
inline void GateServerInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 GateServerInfo::port() const {
  // @@protoc_insertion_point(field_get:CPGServer.GateServerInfo.port)
  return port_;
}
inline void GateServerInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.GateServerInfo.port)
}

// int32 sid = 2;
inline void GateServerInfo::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 GateServerInfo::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.GateServerInfo.sid)
  return sid_;
}
inline void GateServerInfo::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.GateServerInfo.sid)
}

// string ip = 3;
inline void GateServerInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:CPGServer.GateServerInfo.ip)
  return ip_.GetNoArena();
}
inline void GateServerInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CPGServer.GateServerInfo.ip)
}
#if LANG_CXX11
inline void GateServerInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CPGServer.GateServerInfo.ip)
}
#endif
inline void GateServerInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CPGServer.GateServerInfo.ip)
}
inline void GateServerInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CPGServer.GateServerInfo.ip)
}
inline ::std::string* GateServerInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CPGServer.GateServerInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateServerInfo::release_ip() {
  // @@protoc_insertion_point(field_release:CPGServer.GateServerInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CPGServer.GateServerInfo.ip)
}

// string exportIP = 4;
inline void GateServerInfo::clear_exportip() {
  exportip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GateServerInfo::exportip() const {
  // @@protoc_insertion_point(field_get:CPGServer.GateServerInfo.exportIP)
  return exportip_.GetNoArena();
}
inline void GateServerInfo::set_exportip(const ::std::string& value) {
  
  exportip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CPGServer.GateServerInfo.exportIP)
}
#if LANG_CXX11
inline void GateServerInfo::set_exportip(::std::string&& value) {
  
  exportip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CPGServer.GateServerInfo.exportIP)
}
#endif
inline void GateServerInfo::set_exportip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exportip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CPGServer.GateServerInfo.exportIP)
}
inline void GateServerInfo::set_exportip(const char* value, size_t size) {
  
  exportip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CPGServer.GateServerInfo.exportIP)
}
inline ::std::string* GateServerInfo::mutable_exportip() {
  
  // @@protoc_insertion_point(field_mutable:CPGServer.GateServerInfo.exportIP)
  return exportip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GateServerInfo::release_exportip() {
  // @@protoc_insertion_point(field_release:CPGServer.GateServerInfo.exportIP)
  
  return exportip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GateServerInfo::set_allocated_exportip(::std::string* exportip) {
  if (exportip != NULL) {
    
  } else {
    
  }
  exportip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exportip);
  // @@protoc_insertion_point(field_set_allocated:CPGServer.GateServerInfo.exportIP)
}

// -------------------------------------------------------------------

// ServerLoginRQ

// int32 cid = 1;
inline void ServerLoginRQ::clear_cid() {
  cid_ = 0;
}
inline ::google::protobuf::int32 ServerLoginRQ::cid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerLoginRQ.cid)
  return cid_;
}
inline void ServerLoginRQ::set_cid(::google::protobuf::int32 value) {
  
  cid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerLoginRQ.cid)
}

// int32 sid = 2;
inline void ServerLoginRQ::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 ServerLoginRQ::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerLoginRQ.sid)
  return sid_;
}
inline void ServerLoginRQ::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerLoginRQ.sid)
}

// -------------------------------------------------------------------

// ServerLoginRS

// int32 result = 1;
inline void ServerLoginRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ServerLoginRS::result() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerLoginRS.result)
  return result_;
}
inline void ServerLoginRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerLoginRS.result)
}

// int32 cid = 2;
inline void ServerLoginRS::clear_cid() {
  cid_ = 0;
}
inline ::google::protobuf::int32 ServerLoginRS::cid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerLoginRS.cid)
  return cid_;
}
inline void ServerLoginRS::set_cid(::google::protobuf::int32 value) {
  
  cid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServerLoginRS.cid)
}

// .CPGServer.GateServerInfo gsinfo = 3;
inline bool ServerLoginRS::has_gsinfo() const {
  return this != internal_default_instance() && gsinfo_ != NULL;
}
inline void ServerLoginRS::clear_gsinfo() {
  if (GetArenaNoVirtual() == NULL && gsinfo_ != NULL) {
    delete gsinfo_;
  }
  gsinfo_ = NULL;
}
inline const ::CPGServer::GateServerInfo& ServerLoginRS::gsinfo() const {
  const ::CPGServer::GateServerInfo* p = gsinfo_;
  // @@protoc_insertion_point(field_get:CPGServer.ServerLoginRS.gsinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::CPGServer::GateServerInfo*>(
      &::CPGServer::_GateServerInfo_default_instance_);
}
inline ::CPGServer::GateServerInfo* ServerLoginRS::release_gsinfo() {
  // @@protoc_insertion_point(field_release:CPGServer.ServerLoginRS.gsinfo)
  
  ::CPGServer::GateServerInfo* temp = gsinfo_;
  gsinfo_ = NULL;
  return temp;
}
inline ::CPGServer::GateServerInfo* ServerLoginRS::mutable_gsinfo() {
  
  if (gsinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::CPGServer::GateServerInfo>(GetArenaNoVirtual());
    gsinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CPGServer.ServerLoginRS.gsinfo)
  return gsinfo_;
}
inline void ServerLoginRS::set_allocated_gsinfo(::CPGServer::GateServerInfo* gsinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete gsinfo_;
  }
  if (gsinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gsinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gsinfo, submessage_arena);
    }
    
  } else {
    
  }
  gsinfo_ = gsinfo;
  // @@protoc_insertion_point(field_set_allocated:CPGServer.ServerLoginRS.gsinfo)
}

// -------------------------------------------------------------------

// ServiceMatchDistibuteNotify

// int32 sid = 1;
inline void ServiceMatchDistibuteNotify::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 ServiceMatchDistibuteNotify::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.ServiceMatchDistibuteNotify.sid)
  return sid_;
}
inline void ServiceMatchDistibuteNotify::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.ServiceMatchDistibuteNotify.sid)
}

// repeated int32 mid = 2;
inline int ServiceMatchDistibuteNotify::mid_size() const {
  return mid_.size();
}
inline void ServiceMatchDistibuteNotify::clear_mid() {
  mid_.Clear();
}
inline ::google::protobuf::int32 ServiceMatchDistibuteNotify::mid(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.ServiceMatchDistibuteNotify.mid)
  return mid_.Get(index);
}
inline void ServiceMatchDistibuteNotify::set_mid(int index, ::google::protobuf::int32 value) {
  mid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CPGServer.ServiceMatchDistibuteNotify.mid)
}
inline void ServiceMatchDistibuteNotify::add_mid(::google::protobuf::int32 value) {
  mid_.Add(value);
  // @@protoc_insertion_point(field_add:CPGServer.ServiceMatchDistibuteNotify.mid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServiceMatchDistibuteNotify::mid() const {
  // @@protoc_insertion_point(field_list:CPGServer.ServiceMatchDistibuteNotify.mid)
  return mid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServiceMatchDistibuteNotify::mutable_mid() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.ServiceMatchDistibuteNotify.mid)
  return &mid_;
}

// -------------------------------------------------------------------

// ServerAllMatchDistributeNotify

// repeated .CPGServer.ServiceMatchDistibuteNotify services = 1;
inline int ServerAllMatchDistributeNotify::services_size() const {
  return services_.size();
}
inline void ServerAllMatchDistributeNotify::clear_services() {
  services_.Clear();
}
inline ::CPGServer::ServiceMatchDistibuteNotify* ServerAllMatchDistributeNotify::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:CPGServer.ServerAllMatchDistributeNotify.services)
  return services_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CPGServer::ServiceMatchDistibuteNotify >*
ServerAllMatchDistributeNotify::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.ServerAllMatchDistributeNotify.services)
  return &services_;
}
inline const ::CPGServer::ServiceMatchDistibuteNotify& ServerAllMatchDistributeNotify::services(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.ServerAllMatchDistributeNotify.services)
  return services_.Get(index);
}
inline ::CPGServer::ServiceMatchDistibuteNotify* ServerAllMatchDistributeNotify::add_services() {
  // @@protoc_insertion_point(field_add:CPGServer.ServerAllMatchDistributeNotify.services)
  return services_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CPGServer::ServiceMatchDistibuteNotify >&
ServerAllMatchDistributeNotify::services() const {
  // @@protoc_insertion_point(field_list:CPGServer.ServerAllMatchDistributeNotify.services)
  return services_;
}

// -------------------------------------------------------------------

// CheckMatchDistributeRQ

// int32 sid = 1;
inline void CheckMatchDistributeRQ::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 CheckMatchDistributeRQ::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRQ.sid)
  return sid_;
}
inline void CheckMatchDistributeRQ::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRQ.sid)
}

// int32 type = 2;
inline void CheckMatchDistributeRQ::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CheckMatchDistributeRQ::type() const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRQ.type)
  return type_;
}
inline void CheckMatchDistributeRQ::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRQ.type)
}

// repeated int32 mids = 3;
inline int CheckMatchDistributeRQ::mids_size() const {
  return mids_.size();
}
inline void CheckMatchDistributeRQ::clear_mids() {
  mids_.Clear();
}
inline ::google::protobuf::int32 CheckMatchDistributeRQ::mids(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRQ.mids)
  return mids_.Get(index);
}
inline void CheckMatchDistributeRQ::set_mids(int index, ::google::protobuf::int32 value) {
  mids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRQ.mids)
}
inline void CheckMatchDistributeRQ::add_mids(::google::protobuf::int32 value) {
  mids_.Add(value);
  // @@protoc_insertion_point(field_add:CPGServer.CheckMatchDistributeRQ.mids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CheckMatchDistributeRQ::mids() const {
  // @@protoc_insertion_point(field_list:CPGServer.CheckMatchDistributeRQ.mids)
  return mids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CheckMatchDistributeRQ::mutable_mids() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.CheckMatchDistributeRQ.mids)
  return &mids_;
}

// -------------------------------------------------------------------

// CheckMatchDistributeRS

// int32 sid = 1;
inline void CheckMatchDistributeRS::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 CheckMatchDistributeRS::sid() const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRS.sid)
  return sid_;
}
inline void CheckMatchDistributeRS::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRS.sid)
}

// int32 type = 2;
inline void CheckMatchDistributeRS::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CheckMatchDistributeRS::type() const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRS.type)
  return type_;
}
inline void CheckMatchDistributeRS::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRS.type)
}

// int32 result = 3;
inline void CheckMatchDistributeRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 CheckMatchDistributeRS::result() const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRS.result)
  return result_;
}
inline void CheckMatchDistributeRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRS.result)
}

// repeated int32 mids = 4;
inline int CheckMatchDistributeRS::mids_size() const {
  return mids_.size();
}
inline void CheckMatchDistributeRS::clear_mids() {
  mids_.Clear();
}
inline ::google::protobuf::int32 CheckMatchDistributeRS::mids(int index) const {
  // @@protoc_insertion_point(field_get:CPGServer.CheckMatchDistributeRS.mids)
  return mids_.Get(index);
}
inline void CheckMatchDistributeRS::set_mids(int index, ::google::protobuf::int32 value) {
  mids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CPGServer.CheckMatchDistributeRS.mids)
}
inline void CheckMatchDistributeRS::add_mids(::google::protobuf::int32 value) {
  mids_.Add(value);
  // @@protoc_insertion_point(field_add:CPGServer.CheckMatchDistributeRS.mids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CheckMatchDistributeRS::mids() const {
  // @@protoc_insertion_point(field_list:CPGServer.CheckMatchDistributeRS.mids)
  return mids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CheckMatchDistributeRS::mutable_mids() {
  // @@protoc_insertion_point(field_mutable_list:CPGServer.CheckMatchDistributeRS.mids)
  return &mids_;
}

// -------------------------------------------------------------------

// CancelMatchRQ

// int32 mid = 1;
inline void CancelMatchRQ::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 CancelMatchRQ::mid() const {
  // @@protoc_insertion_point(field_get:CPGServer.CancelMatchRQ.mid)
  return mid_;
}
inline void CancelMatchRQ::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CancelMatchRQ.mid)
}

// int32 reason = 2;
inline void CancelMatchRQ::clear_reason() {
  reason_ = 0;
}
inline ::google::protobuf::int32 CancelMatchRQ::reason() const {
  // @@protoc_insertion_point(field_get:CPGServer.CancelMatchRQ.reason)
  return reason_;
}
inline void CancelMatchRQ::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CancelMatchRQ.reason)
}

// -------------------------------------------------------------------

// CancelMatchRS

// int32 mid = 1;
inline void CancelMatchRS::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 CancelMatchRS::mid() const {
  // @@protoc_insertion_point(field_get:CPGServer.CancelMatchRS.mid)
  return mid_;
}
inline void CancelMatchRS::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CancelMatchRS.mid)
}

// int32 result = 2;
inline void CancelMatchRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 CancelMatchRS::result() const {
  // @@protoc_insertion_point(field_get:CPGServer.CancelMatchRS.result)
  return result_;
}
inline void CancelMatchRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.CancelMatchRS.result)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateMatchRQ

// int32 mid = 1;
inline void UpdateMatchRQ::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UpdateMatchRQ::mid() const {
  // @@protoc_insertion_point(field_get:CPGServer.UpdateMatchRQ.mid)
  return mid_;
}
inline void UpdateMatchRQ::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.UpdateMatchRQ.mid)
}

// map<string, string> properties = 2;
inline int UpdateMatchRQ::properties_size() const {
  return properties_.size();
}
inline void UpdateMatchRQ::clear_properties() {
  properties_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
UpdateMatchRQ::properties() const {
  // @@protoc_insertion_point(field_map:CPGServer.UpdateMatchRQ.properties)
  return properties_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
UpdateMatchRQ::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:CPGServer.UpdateMatchRQ.properties)
  return properties_.MutableMap();
}

// -------------------------------------------------------------------

// UpdateMatchRS

// int32 mid = 1;
inline void UpdateMatchRS::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UpdateMatchRS::mid() const {
  // @@protoc_insertion_point(field_get:CPGServer.UpdateMatchRS.mid)
  return mid_;
}
inline void UpdateMatchRS::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.UpdateMatchRS.mid)
}

// int32 result = 2;
inline void UpdateMatchRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UpdateMatchRS::result() const {
  // @@protoc_insertion_point(field_get:CPGServer.UpdateMatchRS.result)
  return result_;
}
inline void UpdateMatchRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGServer.UpdateMatchRS.result)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CreateMatchRQ

// map<string, string> properties = 1;
inline int CreateMatchRQ::properties_size() const {
  return properties_.size();
}
inline void CreateMatchRQ::clear_properties() {
  properties_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
CreateMatchRQ::properties() const {
  // @@protoc_insertion_point(field_map:CPGServer.CreateMatchRQ.properties)
  return properties_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
CreateMatchRQ::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:CPGServer.CreateMatchRQ.properties)
  return properties_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CreateMatchRS

// map<string, string> properties = 1;
inline int CreateMatchRS::properties_size() const {
  return properties_.size();
}
inline void CreateMatchRS::clear_properties() {
  properties_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
CreateMatchRS::properties() const {
  // @@protoc_insertion_point(field_map:CPGServer.CreateMatchRS.properties)
  return properties_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
CreateMatchRS::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:CPGServer.CreateMatchRS.properties)
  return properties_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CPGServer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_CPGServer_2eproto
