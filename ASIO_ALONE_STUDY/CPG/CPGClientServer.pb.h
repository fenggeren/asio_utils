// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPGClientServer.proto

#ifndef PROTOBUF_INCLUDED_CPGClientServer_2eproto
#define PROTOBUF_INCLUDED_CPGClientServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CPGClientServer_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_CPGClientServer_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_CPGClientServer_2eproto();
namespace CPGClientServer {
class BeatHeartRQ;
class BeatHeartRQDefaultTypeInternal;
extern BeatHeartRQDefaultTypeInternal _BeatHeartRQ_default_instance_;
class BeatHeartRS;
class BeatHeartRSDefaultTypeInternal;
extern BeatHeartRSDefaultTypeInternal _BeatHeartRS_default_instance_;
class ConnectRQ;
class ConnectRQDefaultTypeInternal;
extern ConnectRQDefaultTypeInternal _ConnectRQ_default_instance_;
class ConnectRS;
class ConnectRSDefaultTypeInternal;
extern ConnectRSDefaultTypeInternal _ConnectRS_default_instance_;
class JoinMatchRQ;
class JoinMatchRQDefaultTypeInternal;
extern JoinMatchRQDefaultTypeInternal _JoinMatchRQ_default_instance_;
class JoinMatchRS;
class JoinMatchRSDefaultTypeInternal;
extern JoinMatchRSDefaultTypeInternal _JoinMatchRS_default_instance_;
class LoginRQ;
class LoginRQDefaultTypeInternal;
extern LoginRQDefaultTypeInternal _LoginRQ_default_instance_;
class LoginRS;
class LoginRSDefaultTypeInternal;
extern LoginRSDefaultTypeInternal _LoginRS_default_instance_;
class MatchListRQ;
class MatchListRQDefaultTypeInternal;
extern MatchListRQDefaultTypeInternal _MatchListRQ_default_instance_;
class MatchListRS;
class MatchListRSDefaultTypeInternal;
extern MatchListRSDefaultTypeInternal _MatchListRS_default_instance_;
class MatchListRS_MatchBriefInfo;
class MatchListRS_MatchBriefInfoDefaultTypeInternal;
extern MatchListRS_MatchBriefInfoDefaultTypeInternal _MatchListRS_MatchBriefInfo_default_instance_;
class UnjoinMatchRQ;
class UnjoinMatchRQDefaultTypeInternal;
extern UnjoinMatchRQDefaultTypeInternal _UnjoinMatchRQ_default_instance_;
class UnjoinMatchRS;
class UnjoinMatchRSDefaultTypeInternal;
extern UnjoinMatchRSDefaultTypeInternal _UnjoinMatchRS_default_instance_;
}  // namespace CPGClientServer
namespace google {
namespace protobuf {
template<> ::CPGClientServer::BeatHeartRQ* Arena::CreateMaybeMessage<::CPGClientServer::BeatHeartRQ>(Arena*);
template<> ::CPGClientServer::BeatHeartRS* Arena::CreateMaybeMessage<::CPGClientServer::BeatHeartRS>(Arena*);
template<> ::CPGClientServer::ConnectRQ* Arena::CreateMaybeMessage<::CPGClientServer::ConnectRQ>(Arena*);
template<> ::CPGClientServer::ConnectRS* Arena::CreateMaybeMessage<::CPGClientServer::ConnectRS>(Arena*);
template<> ::CPGClientServer::JoinMatchRQ* Arena::CreateMaybeMessage<::CPGClientServer::JoinMatchRQ>(Arena*);
template<> ::CPGClientServer::JoinMatchRS* Arena::CreateMaybeMessage<::CPGClientServer::JoinMatchRS>(Arena*);
template<> ::CPGClientServer::LoginRQ* Arena::CreateMaybeMessage<::CPGClientServer::LoginRQ>(Arena*);
template<> ::CPGClientServer::LoginRS* Arena::CreateMaybeMessage<::CPGClientServer::LoginRS>(Arena*);
template<> ::CPGClientServer::MatchListRQ* Arena::CreateMaybeMessage<::CPGClientServer::MatchListRQ>(Arena*);
template<> ::CPGClientServer::MatchListRS* Arena::CreateMaybeMessage<::CPGClientServer::MatchListRS>(Arena*);
template<> ::CPGClientServer::MatchListRS_MatchBriefInfo* Arena::CreateMaybeMessage<::CPGClientServer::MatchListRS_MatchBriefInfo>(Arena*);
template<> ::CPGClientServer::UnjoinMatchRQ* Arena::CreateMaybeMessage<::CPGClientServer::UnjoinMatchRQ>(Arena*);
template<> ::CPGClientServer::UnjoinMatchRS* Arena::CreateMaybeMessage<::CPGClientServer::UnjoinMatchRS>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CPGClientServer {

// ===================================================================

class BeatHeartRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.BeatHeartRQ) */ {
 public:
  BeatHeartRQ();
  virtual ~BeatHeartRQ();

  BeatHeartRQ(const BeatHeartRQ& from);

  inline BeatHeartRQ& operator=(const BeatHeartRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeatHeartRQ(BeatHeartRQ&& from) noexcept
    : BeatHeartRQ() {
    *this = ::std::move(from);
  }

  inline BeatHeartRQ& operator=(BeatHeartRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BeatHeartRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeatHeartRQ* internal_default_instance() {
    return reinterpret_cast<const BeatHeartRQ*>(
               &_BeatHeartRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BeatHeartRQ* other);
  friend void swap(BeatHeartRQ& a, BeatHeartRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeatHeartRQ* New() const final {
    return CreateMaybeMessage<BeatHeartRQ>(NULL);
  }

  BeatHeartRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BeatHeartRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BeatHeartRQ& from);
  void MergeFrom(const BeatHeartRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BeatHeartRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.BeatHeartRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class BeatHeartRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.BeatHeartRS) */ {
 public:
  BeatHeartRS();
  virtual ~BeatHeartRS();

  BeatHeartRS(const BeatHeartRS& from);

  inline BeatHeartRS& operator=(const BeatHeartRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeatHeartRS(BeatHeartRS&& from) noexcept
    : BeatHeartRS() {
    *this = ::std::move(from);
  }

  inline BeatHeartRS& operator=(BeatHeartRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BeatHeartRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeatHeartRS* internal_default_instance() {
    return reinterpret_cast<const BeatHeartRS*>(
               &_BeatHeartRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(BeatHeartRS* other);
  friend void swap(BeatHeartRS& a, BeatHeartRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeatHeartRS* New() const final {
    return CreateMaybeMessage<BeatHeartRS>(NULL);
  }

  BeatHeartRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BeatHeartRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BeatHeartRS& from);
  void MergeFrom(const BeatHeartRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BeatHeartRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.BeatHeartRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class LoginRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.LoginRQ) */ {
 public:
  LoginRQ();
  virtual ~LoginRQ();

  LoginRQ(const LoginRQ& from);

  inline LoginRQ& operator=(const LoginRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRQ(LoginRQ&& from) noexcept
    : LoginRQ() {
    *this = ::std::move(from);
  }

  inline LoginRQ& operator=(LoginRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRQ* internal_default_instance() {
    return reinterpret_cast<const LoginRQ*>(
               &_LoginRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LoginRQ* other);
  friend void swap(LoginRQ& a, LoginRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRQ* New() const final {
    return CreateMaybeMessage<LoginRQ>(NULL);
  }

  LoginRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRQ& from);
  void MergeFrom(const LoginRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.LoginRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class LoginRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.LoginRS) */ {
 public:
  LoginRS();
  virtual ~LoginRS();

  LoginRS(const LoginRS& from);

  inline LoginRS& operator=(const LoginRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRS(LoginRS&& from) noexcept
    : LoginRS() {
    *this = ::std::move(from);
  }

  inline LoginRS& operator=(LoginRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRS* internal_default_instance() {
    return reinterpret_cast<const LoginRS*>(
               &_LoginRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LoginRS* other);
  friend void swap(LoginRS& a, LoginRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRS* New() const final {
    return CreateMaybeMessage<LoginRS>(NULL);
  }

  LoginRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRS& from);
  void MergeFrom(const LoginRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.LoginRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class JoinMatchRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.JoinMatchRQ) */ {
 public:
  JoinMatchRQ();
  virtual ~JoinMatchRQ();

  JoinMatchRQ(const JoinMatchRQ& from);

  inline JoinMatchRQ& operator=(const JoinMatchRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinMatchRQ(JoinMatchRQ&& from) noexcept
    : JoinMatchRQ() {
    *this = ::std::move(from);
  }

  inline JoinMatchRQ& operator=(JoinMatchRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JoinMatchRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinMatchRQ* internal_default_instance() {
    return reinterpret_cast<const JoinMatchRQ*>(
               &_JoinMatchRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(JoinMatchRQ* other);
  friend void swap(JoinMatchRQ& a, JoinMatchRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinMatchRQ* New() const final {
    return CreateMaybeMessage<JoinMatchRQ>(NULL);
  }

  JoinMatchRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinMatchRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinMatchRQ& from);
  void MergeFrom(const JoinMatchRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinMatchRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 mid = 2;
  void clear_mid();
  static const int kMidFieldNumber = 2;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 mtype = 3;
  void clear_mtype();
  static const int kMtypeFieldNumber = 3;
  ::google::protobuf::int32 mtype() const;
  void set_mtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.JoinMatchRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 mtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class JoinMatchRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.JoinMatchRS) */ {
 public:
  JoinMatchRS();
  virtual ~JoinMatchRS();

  JoinMatchRS(const JoinMatchRS& from);

  inline JoinMatchRS& operator=(const JoinMatchRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinMatchRS(JoinMatchRS&& from) noexcept
    : JoinMatchRS() {
    *this = ::std::move(from);
  }

  inline JoinMatchRS& operator=(JoinMatchRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JoinMatchRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinMatchRS* internal_default_instance() {
    return reinterpret_cast<const JoinMatchRS*>(
               &_JoinMatchRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(JoinMatchRS* other);
  friend void swap(JoinMatchRS& a, JoinMatchRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinMatchRS* New() const final {
    return CreateMaybeMessage<JoinMatchRS>(NULL);
  }

  JoinMatchRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinMatchRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinMatchRS& from);
  void MergeFrom(const JoinMatchRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinMatchRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 mid = 2;
  void clear_mid();
  static const int kMidFieldNumber = 2;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 mtype = 3;
  void clear_mtype();
  static const int kMtypeFieldNumber = 3;
  ::google::protobuf::int32 mtype() const;
  void set_mtype(::google::protobuf::int32 value);

  // int32 remainPlayer = 4;
  void clear_remainplayer();
  static const int kRemainPlayerFieldNumber = 4;
  ::google::protobuf::int32 remainplayer() const;
  void set_remainplayer(::google::protobuf::int32 value);

  // int32 result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.JoinMatchRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 mtype_;
  ::google::protobuf::int32 remainplayer_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class UnjoinMatchRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.UnjoinMatchRQ) */ {
 public:
  UnjoinMatchRQ();
  virtual ~UnjoinMatchRQ();

  UnjoinMatchRQ(const UnjoinMatchRQ& from);

  inline UnjoinMatchRQ& operator=(const UnjoinMatchRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnjoinMatchRQ(UnjoinMatchRQ&& from) noexcept
    : UnjoinMatchRQ() {
    *this = ::std::move(from);
  }

  inline UnjoinMatchRQ& operator=(UnjoinMatchRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnjoinMatchRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnjoinMatchRQ* internal_default_instance() {
    return reinterpret_cast<const UnjoinMatchRQ*>(
               &_UnjoinMatchRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UnjoinMatchRQ* other);
  friend void swap(UnjoinMatchRQ& a, UnjoinMatchRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnjoinMatchRQ* New() const final {
    return CreateMaybeMessage<UnjoinMatchRQ>(NULL);
  }

  UnjoinMatchRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnjoinMatchRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnjoinMatchRQ& from);
  void MergeFrom(const UnjoinMatchRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnjoinMatchRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 mid = 2;
  void clear_mid();
  static const int kMidFieldNumber = 2;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 mtype = 3;
  void clear_mtype();
  static const int kMtypeFieldNumber = 3;
  ::google::protobuf::int32 mtype() const;
  void set_mtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.UnjoinMatchRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 mtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class UnjoinMatchRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.UnjoinMatchRS) */ {
 public:
  UnjoinMatchRS();
  virtual ~UnjoinMatchRS();

  UnjoinMatchRS(const UnjoinMatchRS& from);

  inline UnjoinMatchRS& operator=(const UnjoinMatchRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnjoinMatchRS(UnjoinMatchRS&& from) noexcept
    : UnjoinMatchRS() {
    *this = ::std::move(from);
  }

  inline UnjoinMatchRS& operator=(UnjoinMatchRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnjoinMatchRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnjoinMatchRS* internal_default_instance() {
    return reinterpret_cast<const UnjoinMatchRS*>(
               &_UnjoinMatchRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UnjoinMatchRS* other);
  friend void swap(UnjoinMatchRS& a, UnjoinMatchRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnjoinMatchRS* New() const final {
    return CreateMaybeMessage<UnjoinMatchRS>(NULL);
  }

  UnjoinMatchRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnjoinMatchRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnjoinMatchRS& from);
  void MergeFrom(const UnjoinMatchRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnjoinMatchRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 mid = 2;
  void clear_mid();
  static const int kMidFieldNumber = 2;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 mtype = 3;
  void clear_mtype();
  static const int kMtypeFieldNumber = 3;
  ::google::protobuf::int32 mtype() const;
  void set_mtype(::google::protobuf::int32 value);

  // int32 remainPlayer = 4;
  void clear_remainplayer();
  static const int kRemainPlayerFieldNumber = 4;
  ::google::protobuf::int32 remainplayer() const;
  void set_remainplayer(::google::protobuf::int32 value);

  // int32 result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.UnjoinMatchRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 mtype_;
  ::google::protobuf::int32 remainplayer_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class ConnectRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.ConnectRQ) */ {
 public:
  ConnectRQ();
  virtual ~ConnectRQ();

  ConnectRQ(const ConnectRQ& from);

  inline ConnectRQ& operator=(const ConnectRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectRQ(ConnectRQ&& from) noexcept
    : ConnectRQ() {
    *this = ::std::move(from);
  }

  inline ConnectRQ& operator=(ConnectRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConnectRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectRQ* internal_default_instance() {
    return reinterpret_cast<const ConnectRQ*>(
               &_ConnectRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ConnectRQ* other);
  friend void swap(ConnectRQ& a, ConnectRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectRQ* New() const final {
    return CreateMaybeMessage<ConnectRQ>(NULL);
  }

  ConnectRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectRQ& from);
  void MergeFrom(const ConnectRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 logicID = 1;
  void clear_logicid();
  static const int kLogicIDFieldNumber = 1;
  ::google::protobuf::int32 logicid() const;
  void set_logicid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.ConnectRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 logicid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class ConnectRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.ConnectRS) */ {
 public:
  ConnectRS();
  virtual ~ConnectRS();

  ConnectRS(const ConnectRS& from);

  inline ConnectRS& operator=(const ConnectRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectRS(ConnectRS&& from) noexcept
    : ConnectRS() {
    *this = ::std::move(from);
  }

  inline ConnectRS& operator=(ConnectRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConnectRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectRS* internal_default_instance() {
    return reinterpret_cast<const ConnectRS*>(
               &_ConnectRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ConnectRS* other);
  friend void swap(ConnectRS& a, ConnectRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectRS* New() const final {
    return CreateMaybeMessage<ConnectRS>(NULL);
  }

  ConnectRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectRS& from);
  void MergeFrom(const ConnectRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.ConnectRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class MatchListRQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.MatchListRQ) */ {
 public:
  MatchListRQ();
  virtual ~MatchListRQ();

  MatchListRQ(const MatchListRQ& from);

  inline MatchListRQ& operator=(const MatchListRQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchListRQ(MatchListRQ&& from) noexcept
    : MatchListRQ() {
    *this = ::std::move(from);
  }

  inline MatchListRQ& operator=(MatchListRQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MatchListRQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchListRQ* internal_default_instance() {
    return reinterpret_cast<const MatchListRQ*>(
               &_MatchListRQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(MatchListRQ* other);
  friend void swap(MatchListRQ& a, MatchListRQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchListRQ* New() const final {
    return CreateMaybeMessage<MatchListRQ>(NULL);
  }

  MatchListRQ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchListRQ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchListRQ& from);
  void MergeFrom(const MatchListRQ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchListRQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.MatchListRQ)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class MatchListRS_MatchBriefInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.MatchListRS.MatchBriefInfo) */ {
 public:
  MatchListRS_MatchBriefInfo();
  virtual ~MatchListRS_MatchBriefInfo();

  MatchListRS_MatchBriefInfo(const MatchListRS_MatchBriefInfo& from);

  inline MatchListRS_MatchBriefInfo& operator=(const MatchListRS_MatchBriefInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchListRS_MatchBriefInfo(MatchListRS_MatchBriefInfo&& from) noexcept
    : MatchListRS_MatchBriefInfo() {
    *this = ::std::move(from);
  }

  inline MatchListRS_MatchBriefInfo& operator=(MatchListRS_MatchBriefInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MatchListRS_MatchBriefInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchListRS_MatchBriefInfo* internal_default_instance() {
    return reinterpret_cast<const MatchListRS_MatchBriefInfo*>(
               &_MatchListRS_MatchBriefInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(MatchListRS_MatchBriefInfo* other);
  friend void swap(MatchListRS_MatchBriefInfo& a, MatchListRS_MatchBriefInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchListRS_MatchBriefInfo* New() const final {
    return CreateMaybeMessage<MatchListRS_MatchBriefInfo>(NULL);
  }

  MatchListRS_MatchBriefInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchListRS_MatchBriefInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchListRS_MatchBriefInfo& from);
  void MergeFrom(const MatchListRS_MatchBriefInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchListRS_MatchBriefInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // int32 totalPlayer = 4;
  void clear_totalplayer();
  static const int kTotalPlayerFieldNumber = 4;
  ::google::protobuf::int32 totalplayer() const;
  void set_totalplayer(::google::protobuf::int32 value);

  // int32 remainedPlayer = 5;
  void clear_remainedplayer();
  static const int kRemainedPlayerFieldNumber = 5;
  ::google::protobuf::int32 remainedplayer() const;
  void set_remainedplayer(::google::protobuf::int32 value);

  // int32 state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 curLevel = 7;
  void clear_curlevel();
  static const int kCurLevelFieldNumber = 7;
  ::google::protobuf::int32 curlevel() const;
  void set_curlevel(::google::protobuf::int32 value);

  // int32 entryfee = 8;
  void clear_entryfee();
  static const int kEntryfeeFieldNumber = 8;
  ::google::protobuf::int32 entryfee() const;
  void set_entryfee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.MatchListRS.MatchBriefInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 totalplayer_;
  ::google::protobuf::int32 remainedplayer_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 curlevel_;
  ::google::protobuf::int32 entryfee_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// -------------------------------------------------------------------

class MatchListRS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CPGClientServer.MatchListRS) */ {
 public:
  MatchListRS();
  virtual ~MatchListRS();

  MatchListRS(const MatchListRS& from);

  inline MatchListRS& operator=(const MatchListRS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchListRS(MatchListRS&& from) noexcept
    : MatchListRS() {
    *this = ::std::move(from);
  }

  inline MatchListRS& operator=(MatchListRS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MatchListRS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchListRS* internal_default_instance() {
    return reinterpret_cast<const MatchListRS*>(
               &_MatchListRS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(MatchListRS* other);
  friend void swap(MatchListRS& a, MatchListRS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchListRS* New() const final {
    return CreateMaybeMessage<MatchListRS>(NULL);
  }

  MatchListRS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchListRS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchListRS& from);
  void MergeFrom(const MatchListRS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchListRS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MatchListRS_MatchBriefInfo MatchBriefInfo;

  // accessors -------------------------------------------------------

  // repeated .CPGClientServer.MatchListRS.MatchBriefInfo matchList = 3;
  int matchlist_size() const;
  void clear_matchlist();
  static const int kMatchListFieldNumber = 3;
  ::CPGClientServer::MatchListRS_MatchBriefInfo* mutable_matchlist(int index);
  ::google::protobuf::RepeatedPtrField< ::CPGClientServer::MatchListRS_MatchBriefInfo >*
      mutable_matchlist();
  const ::CPGClientServer::MatchListRS_MatchBriefInfo& matchlist(int index) const;
  ::CPGClientServer::MatchListRS_MatchBriefInfo* add_matchlist();
  const ::google::protobuf::RepeatedPtrField< ::CPGClientServer::MatchListRS_MatchBriefInfo >&
      matchlist() const;

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CPGClientServer.MatchListRS)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CPGClientServer::MatchListRS_MatchBriefInfo > matchlist_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CPGClientServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BeatHeartRQ

// int32 type = 1;
inline void BeatHeartRQ::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 BeatHeartRQ::type() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.BeatHeartRQ.type)
  return type_;
}
inline void BeatHeartRQ::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.BeatHeartRQ.type)
}

// -------------------------------------------------------------------

// BeatHeartRS

// int32 type = 1;
inline void BeatHeartRS::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 BeatHeartRS::type() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.BeatHeartRS.type)
  return type_;
}
inline void BeatHeartRS::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.BeatHeartRS.type)
}

// -------------------------------------------------------------------

// LoginRQ

// int32 uid = 1;
inline void LoginRQ::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 LoginRQ::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.LoginRQ.uid)
  return uid_;
}
inline void LoginRQ::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.LoginRQ.uid)
}

// string token = 2;
inline void LoginRQ::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRQ::token() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.LoginRQ.token)
  return token_.GetNoArena();
}
inline void LoginRQ::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CPGClientServer.LoginRQ.token)
}
#if LANG_CXX11
inline void LoginRQ::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CPGClientServer.LoginRQ.token)
}
#endif
inline void LoginRQ::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CPGClientServer.LoginRQ.token)
}
inline void LoginRQ::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CPGClientServer.LoginRQ.token)
}
inline ::std::string* LoginRQ::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:CPGClientServer.LoginRQ.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRQ::release_token() {
  // @@protoc_insertion_point(field_release:CPGClientServer.LoginRQ.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRQ::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CPGClientServer.LoginRQ.token)
}

// -------------------------------------------------------------------

// LoginRS

// int32 result = 1;
inline void LoginRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LoginRS::result() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.LoginRS.result)
  return result_;
}
inline void LoginRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.LoginRS.result)
}

// -------------------------------------------------------------------

// JoinMatchRQ

// int32 uid = 1;
inline void JoinMatchRQ::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRQ::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRQ.uid)
  return uid_;
}
inline void JoinMatchRQ::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRQ.uid)
}

// int32 mid = 2;
inline void JoinMatchRQ::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRQ::mid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRQ.mid)
  return mid_;
}
inline void JoinMatchRQ::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRQ.mid)
}

// int32 mtype = 3;
inline void JoinMatchRQ::clear_mtype() {
  mtype_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRQ::mtype() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRQ.mtype)
  return mtype_;
}
inline void JoinMatchRQ::set_mtype(::google::protobuf::int32 value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRQ.mtype)
}

// -------------------------------------------------------------------

// JoinMatchRS

// int32 uid = 1;
inline void JoinMatchRS::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRS::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRS.uid)
  return uid_;
}
inline void JoinMatchRS::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRS.uid)
}

// int32 mid = 2;
inline void JoinMatchRS::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRS::mid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRS.mid)
  return mid_;
}
inline void JoinMatchRS::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRS.mid)
}

// int32 mtype = 3;
inline void JoinMatchRS::clear_mtype() {
  mtype_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRS::mtype() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRS.mtype)
  return mtype_;
}
inline void JoinMatchRS::set_mtype(::google::protobuf::int32 value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRS.mtype)
}

// int32 remainPlayer = 4;
inline void JoinMatchRS::clear_remainplayer() {
  remainplayer_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRS::remainplayer() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRS.remainPlayer)
  return remainplayer_;
}
inline void JoinMatchRS::set_remainplayer(::google::protobuf::int32 value) {
  
  remainplayer_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRS.remainPlayer)
}

// int32 result = 5;
inline void JoinMatchRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 JoinMatchRS::result() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.JoinMatchRS.result)
  return result_;
}
inline void JoinMatchRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.JoinMatchRS.result)
}

// -------------------------------------------------------------------

// UnjoinMatchRQ

// int32 uid = 1;
inline void UnjoinMatchRQ::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRQ::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRQ.uid)
  return uid_;
}
inline void UnjoinMatchRQ::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRQ.uid)
}

// int32 mid = 2;
inline void UnjoinMatchRQ::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRQ::mid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRQ.mid)
  return mid_;
}
inline void UnjoinMatchRQ::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRQ.mid)
}

// int32 mtype = 3;
inline void UnjoinMatchRQ::clear_mtype() {
  mtype_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRQ::mtype() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRQ.mtype)
  return mtype_;
}
inline void UnjoinMatchRQ::set_mtype(::google::protobuf::int32 value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRQ.mtype)
}

// -------------------------------------------------------------------

// UnjoinMatchRS

// int32 uid = 1;
inline void UnjoinMatchRS::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRS::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRS.uid)
  return uid_;
}
inline void UnjoinMatchRS::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRS.uid)
}

// int32 mid = 2;
inline void UnjoinMatchRS::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRS::mid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRS.mid)
  return mid_;
}
inline void UnjoinMatchRS::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRS.mid)
}

// int32 mtype = 3;
inline void UnjoinMatchRS::clear_mtype() {
  mtype_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRS::mtype() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRS.mtype)
  return mtype_;
}
inline void UnjoinMatchRS::set_mtype(::google::protobuf::int32 value) {
  
  mtype_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRS.mtype)
}

// int32 remainPlayer = 4;
inline void UnjoinMatchRS::clear_remainplayer() {
  remainplayer_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRS::remainplayer() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRS.remainPlayer)
  return remainplayer_;
}
inline void UnjoinMatchRS::set_remainplayer(::google::protobuf::int32 value) {
  
  remainplayer_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRS.remainPlayer)
}

// int32 result = 5;
inline void UnjoinMatchRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UnjoinMatchRS::result() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.UnjoinMatchRS.result)
  return result_;
}
inline void UnjoinMatchRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.UnjoinMatchRS.result)
}

// -------------------------------------------------------------------

// ConnectRQ

// int32 logicID = 1;
inline void ConnectRQ::clear_logicid() {
  logicid_ = 0;
}
inline ::google::protobuf::int32 ConnectRQ::logicid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.ConnectRQ.logicID)
  return logicid_;
}
inline void ConnectRQ::set_logicid(::google::protobuf::int32 value) {
  
  logicid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.ConnectRQ.logicID)
}

// -------------------------------------------------------------------

// ConnectRS

// int32 result = 1;
inline void ConnectRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ConnectRS::result() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.ConnectRS.result)
  return result_;
}
inline void ConnectRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.ConnectRS.result)
}

// int32 port = 2;
inline void ConnectRS::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 ConnectRS::port() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.ConnectRS.port)
  return port_;
}
inline void ConnectRS::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.ConnectRS.port)
}

// string ip = 3;
inline void ConnectRS::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectRS::ip() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.ConnectRS.ip)
  return ip_.GetNoArena();
}
inline void ConnectRS::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CPGClientServer.ConnectRS.ip)
}
#if LANG_CXX11
inline void ConnectRS::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CPGClientServer.ConnectRS.ip)
}
#endif
inline void ConnectRS::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CPGClientServer.ConnectRS.ip)
}
inline void ConnectRS::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CPGClientServer.ConnectRS.ip)
}
inline ::std::string* ConnectRS::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CPGClientServer.ConnectRS.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectRS::release_ip() {
  // @@protoc_insertion_point(field_release:CPGClientServer.ConnectRS.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectRS::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CPGClientServer.ConnectRS.ip)
}

// -------------------------------------------------------------------

// MatchListRQ

// int32 uid = 1;
inline void MatchListRQ::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 MatchListRQ::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRQ.uid)
  return uid_;
}
inline void MatchListRQ::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRQ.uid)
}

// -------------------------------------------------------------------

// MatchListRS_MatchBriefInfo

// int32 mid = 1;
inline void MatchListRS_MatchBriefInfo::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::mid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.mid)
  return mid_;
}
inline void MatchListRS_MatchBriefInfo::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.mid)
}

// int32 type = 2;
inline void MatchListRS_MatchBriefInfo::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::type() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.type)
  return type_;
}
inline void MatchListRS_MatchBriefInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.type)
}

// int32 time = 3;
inline void MatchListRS_MatchBriefInfo::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::time() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.time)
  return time_;
}
inline void MatchListRS_MatchBriefInfo::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.time)
}

// int32 totalPlayer = 4;
inline void MatchListRS_MatchBriefInfo::clear_totalplayer() {
  totalplayer_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::totalplayer() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.totalPlayer)
  return totalplayer_;
}
inline void MatchListRS_MatchBriefInfo::set_totalplayer(::google::protobuf::int32 value) {
  
  totalplayer_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.totalPlayer)
}

// int32 remainedPlayer = 5;
inline void MatchListRS_MatchBriefInfo::clear_remainedplayer() {
  remainedplayer_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::remainedplayer() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.remainedPlayer)
  return remainedplayer_;
}
inline void MatchListRS_MatchBriefInfo::set_remainedplayer(::google::protobuf::int32 value) {
  
  remainedplayer_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.remainedPlayer)
}

// int32 state = 6;
inline void MatchListRS_MatchBriefInfo::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::state() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.state)
  return state_;
}
inline void MatchListRS_MatchBriefInfo::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.state)
}

// int32 curLevel = 7;
inline void MatchListRS_MatchBriefInfo::clear_curlevel() {
  curlevel_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::curlevel() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.curLevel)
  return curlevel_;
}
inline void MatchListRS_MatchBriefInfo::set_curlevel(::google::protobuf::int32 value) {
  
  curlevel_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.curLevel)
}

// int32 entryfee = 8;
inline void MatchListRS_MatchBriefInfo::clear_entryfee() {
  entryfee_ = 0;
}
inline ::google::protobuf::int32 MatchListRS_MatchBriefInfo::entryfee() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.MatchBriefInfo.entryfee)
  return entryfee_;
}
inline void MatchListRS_MatchBriefInfo::set_entryfee(::google::protobuf::int32 value) {
  
  entryfee_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.MatchBriefInfo.entryfee)
}

// -------------------------------------------------------------------

// MatchListRS

// int32 result = 1;
inline void MatchListRS::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 MatchListRS::result() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.result)
  return result_;
}
inline void MatchListRS::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.result)
}

// int32 uid = 2;
inline void MatchListRS::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 MatchListRS::uid() const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.uid)
  return uid_;
}
inline void MatchListRS::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CPGClientServer.MatchListRS.uid)
}

// repeated .CPGClientServer.MatchListRS.MatchBriefInfo matchList = 3;
inline int MatchListRS::matchlist_size() const {
  return matchlist_.size();
}
inline void MatchListRS::clear_matchlist() {
  matchlist_.Clear();
}
inline ::CPGClientServer::MatchListRS_MatchBriefInfo* MatchListRS::mutable_matchlist(int index) {
  // @@protoc_insertion_point(field_mutable:CPGClientServer.MatchListRS.matchList)
  return matchlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CPGClientServer::MatchListRS_MatchBriefInfo >*
MatchListRS::mutable_matchlist() {
  // @@protoc_insertion_point(field_mutable_list:CPGClientServer.MatchListRS.matchList)
  return &matchlist_;
}
inline const ::CPGClientServer::MatchListRS_MatchBriefInfo& MatchListRS::matchlist(int index) const {
  // @@protoc_insertion_point(field_get:CPGClientServer.MatchListRS.matchList)
  return matchlist_.Get(index);
}
inline ::CPGClientServer::MatchListRS_MatchBriefInfo* MatchListRS::add_matchlist() {
  // @@protoc_insertion_point(field_add:CPGClientServer.MatchListRS.matchList)
  return matchlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CPGClientServer::MatchListRS_MatchBriefInfo >&
MatchListRS::matchlist() const {
  // @@protoc_insertion_point(field_list:CPGClientServer.MatchListRS.matchList)
  return matchlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CPGClientServer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_CPGClientServer_2eproto
