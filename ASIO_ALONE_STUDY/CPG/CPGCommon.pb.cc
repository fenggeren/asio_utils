// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPGCommon.proto

#include "CPGCommon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_CPGCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MatchListRS_MatchBriefInfo_CPGCommon_2eproto;
namespace CPGCommon {
class JoinMatchRQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinMatchRQ> _instance;
} _JoinMatchRQ_default_instance_;
class JoinMatchRSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinMatchRS> _instance;
} _JoinMatchRS_default_instance_;
class UnjoinMatchRQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnjoinMatchRQ> _instance;
} _UnjoinMatchRQ_default_instance_;
class UnjoinMatchRSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnjoinMatchRS> _instance;
} _UnjoinMatchRS_default_instance_;
class MatchListRQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchListRQ> _instance;
} _MatchListRQ_default_instance_;
class MatchListRS_MatchBriefInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchListRS_MatchBriefInfo> _instance;
} _MatchListRS_MatchBriefInfo_default_instance_;
class MatchListRSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchListRS> _instance;
} _MatchListRS_default_instance_;
}  // namespace CPGCommon
static void InitDefaultsJoinMatchRQ_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_JoinMatchRQ_default_instance_;
    new (ptr) ::CPGCommon::JoinMatchRQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::JoinMatchRQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JoinMatchRQ_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoinMatchRQ_CPGCommon_2eproto}, {}};

static void InitDefaultsJoinMatchRS_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_JoinMatchRS_default_instance_;
    new (ptr) ::CPGCommon::JoinMatchRS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::JoinMatchRS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JoinMatchRS_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoinMatchRS_CPGCommon_2eproto}, {}};

static void InitDefaultsUnjoinMatchRQ_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_UnjoinMatchRQ_default_instance_;
    new (ptr) ::CPGCommon::UnjoinMatchRQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::UnjoinMatchRQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnjoinMatchRQ_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnjoinMatchRQ_CPGCommon_2eproto}, {}};

static void InitDefaultsUnjoinMatchRS_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_UnjoinMatchRS_default_instance_;
    new (ptr) ::CPGCommon::UnjoinMatchRS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::UnjoinMatchRS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnjoinMatchRS_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnjoinMatchRS_CPGCommon_2eproto}, {}};

static void InitDefaultsMatchListRQ_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_MatchListRQ_default_instance_;
    new (ptr) ::CPGCommon::MatchListRQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::MatchListRQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatchListRQ_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatchListRQ_CPGCommon_2eproto}, {}};

static void InitDefaultsMatchListRS_MatchBriefInfo_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_MatchListRS_MatchBriefInfo_default_instance_;
    new (ptr) ::CPGCommon::MatchListRS_MatchBriefInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::MatchListRS_MatchBriefInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatchListRS_MatchBriefInfo_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatchListRS_MatchBriefInfo_CPGCommon_2eproto}, {}};

static void InitDefaultsMatchListRS_CPGCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPGCommon::_MatchListRS_default_instance_;
    new (ptr) ::CPGCommon::MatchListRS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPGCommon::MatchListRS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MatchListRS_CPGCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMatchListRS_CPGCommon_2eproto}, {
      &scc_info_MatchListRS_MatchBriefInfo_CPGCommon_2eproto.base,}};

void InitDefaults_CPGCommon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_JoinMatchRQ_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoinMatchRS_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnjoinMatchRQ_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnjoinMatchRS_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchListRQ_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchListRS_MatchBriefInfo_CPGCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchListRS_CPGCommon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_CPGCommon_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_CPGCommon_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_CPGCommon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_CPGCommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRQ, uid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRQ, mid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRQ, mtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, uid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, mid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, mtype_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, remainplayer_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::JoinMatchRS, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRQ, uid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRQ, mid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRQ, mtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, uid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, mid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, mtype_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, remainplayer_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::UnjoinMatchRS, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRQ, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, mid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, type_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, time_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, totalplayer_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, remainedplayer_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, state_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, curlevel_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS_MatchBriefInfo, entryfee_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS, result_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS, uid_),
  PROTOBUF_FIELD_OFFSET(::CPGCommon::MatchListRS, matchlist_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CPGCommon::JoinMatchRQ)},
  { 8, -1, sizeof(::CPGCommon::JoinMatchRS)},
  { 18, -1, sizeof(::CPGCommon::UnjoinMatchRQ)},
  { 26, -1, sizeof(::CPGCommon::UnjoinMatchRS)},
  { 36, -1, sizeof(::CPGCommon::MatchListRQ)},
  { 42, -1, sizeof(::CPGCommon::MatchListRS_MatchBriefInfo)},
  { 55, -1, sizeof(::CPGCommon::MatchListRS)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_JoinMatchRQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_JoinMatchRS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_UnjoinMatchRQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_UnjoinMatchRS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_MatchListRQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_MatchListRS_MatchBriefInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPGCommon::_MatchListRS_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_CPGCommon_2eproto = {
  {}, AddDescriptors_CPGCommon_2eproto, "CPGCommon.proto", schemas,
  file_default_instances, TableStruct_CPGCommon_2eproto::offsets,
  file_level_metadata_CPGCommon_2eproto, 7, file_level_enum_descriptors_CPGCommon_2eproto, file_level_service_descriptors_CPGCommon_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_CPGCommon_2eproto = {
  false, InitDefaults_CPGCommon_2eproto, 
  "\n\017CPGCommon.proto\022\tCPGCommon\"6\n\013JoinMatc"
  "hRQ\022\013\n\003uid\030\001 \001(\005\022\013\n\003mid\030\002 \001(\005\022\r\n\005mtype\030\003"
  " \001(\005\"\\\n\013JoinMatchRS\022\013\n\003uid\030\001 \001(\005\022\013\n\003mid\030"
  "\002 \001(\005\022\r\n\005mtype\030\003 \001(\005\022\024\n\014remainPlayer\030\004 \001"
  "(\005\022\016\n\006result\030\005 \001(\005\"8\n\rUnjoinMatchRQ\022\013\n\003u"
  "id\030\001 \001(\005\022\013\n\003mid\030\002 \001(\005\022\r\n\005mtype\030\003 \001(\005\"^\n\r"
  "UnjoinMatchRS\022\013\n\003uid\030\001 \001(\005\022\013\n\003mid\030\002 \001(\005\022"
  "\r\n\005mtype\030\003 \001(\005\022\024\n\014remainPlayer\030\004 \001(\005\022\016\n\006"
  "result\030\005 \001(\005\"\032\n\013MatchListRQ\022\013\n\003uid\030\001 \001(\005"
  "\"\200\002\n\013MatchListRS\022\016\n\006result\030\001 \001(\005\022\013\n\003uid\030"
  "\002 \001(\005\0228\n\tmatchList\030\003 \003(\0132%.CPGCommon.Mat"
  "chListRS.MatchBriefInfo\032\231\001\n\016MatchBriefIn"
  "fo\022\013\n\003mid\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\014\n\004time\030\003 "
  "\001(\005\022\023\n\013totalPlayer\030\004 \001(\005\022\026\n\016remainedPlay"
  "er\030\005 \001(\005\022\r\n\005state\030\006 \001(\005\022\020\n\010curLevel\030\007 \001("
  "\005\022\020\n\010entryfee\030\010 \001(\005b\006proto3"
,
  "CPGCommon.proto", &assign_descriptors_table_CPGCommon_2eproto, 627,
};

void AddDescriptors_CPGCommon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_CPGCommon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_CPGCommon_2eproto = []() { AddDescriptors_CPGCommon_2eproto(); return true; }();
namespace CPGCommon {

// ===================================================================

void JoinMatchRQ::InitAsDefaultInstance() {
}
class JoinMatchRQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinMatchRQ::kUidFieldNumber;
const int JoinMatchRQ::kMidFieldNumber;
const int JoinMatchRQ::kMtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinMatchRQ::JoinMatchRQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.JoinMatchRQ)
}
JoinMatchRQ::JoinMatchRQ(const JoinMatchRQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.JoinMatchRQ)
}

void JoinMatchRQ::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
}

JoinMatchRQ::~JoinMatchRQ() {
  // @@protoc_insertion_point(destructor:CPGCommon.JoinMatchRQ)
  SharedDtor();
}

void JoinMatchRQ::SharedDtor() {
}

void JoinMatchRQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinMatchRQ& JoinMatchRQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JoinMatchRQ_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void JoinMatchRQ::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.JoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JoinMatchRQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JoinMatchRQ*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      // int32 mid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 mtype = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mtype(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JoinMatchRQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.JoinMatchRQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.JoinMatchRQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.JoinMatchRQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JoinMatchRQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.JoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mid(), output);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.JoinMatchRQ)
}

::google::protobuf::uint8* JoinMatchRQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.JoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mid(), target);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.JoinMatchRQ)
  return target;
}

size_t JoinMatchRQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.JoinMatchRQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinMatchRQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.JoinMatchRQ)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinMatchRQ* source =
      ::google::protobuf::DynamicCastToGenerated<JoinMatchRQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.JoinMatchRQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.JoinMatchRQ)
    MergeFrom(*source);
  }
}

void JoinMatchRQ::MergeFrom(const JoinMatchRQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.JoinMatchRQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
}

void JoinMatchRQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.JoinMatchRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinMatchRQ::CopyFrom(const JoinMatchRQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.JoinMatchRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinMatchRQ::IsInitialized() const {
  return true;
}

void JoinMatchRQ::Swap(JoinMatchRQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinMatchRQ::InternalSwap(JoinMatchRQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(mid_, other->mid_);
  swap(mtype_, other->mtype_);
}

::google::protobuf::Metadata JoinMatchRQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JoinMatchRS::InitAsDefaultInstance() {
}
class JoinMatchRS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinMatchRS::kUidFieldNumber;
const int JoinMatchRS::kMidFieldNumber;
const int JoinMatchRS::kMtypeFieldNumber;
const int JoinMatchRS::kRemainPlayerFieldNumber;
const int JoinMatchRS::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinMatchRS::JoinMatchRS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.JoinMatchRS)
}
JoinMatchRS::JoinMatchRS(const JoinMatchRS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.JoinMatchRS)
}

void JoinMatchRS::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(result_));
}

JoinMatchRS::~JoinMatchRS() {
  // @@protoc_insertion_point(destructor:CPGCommon.JoinMatchRS)
  SharedDtor();
}

void JoinMatchRS::SharedDtor() {
}

void JoinMatchRS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinMatchRS& JoinMatchRS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JoinMatchRS_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void JoinMatchRS::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.JoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JoinMatchRS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JoinMatchRS*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      // int32 mid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 mtype = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mtype(value);
        break;
      }
      // int32 remainPlayer = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_remainplayer(value);
        break;
      }
      // int32 result = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_result(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JoinMatchRS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.JoinMatchRS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remainPlayer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remainplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.JoinMatchRS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.JoinMatchRS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JoinMatchRS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.JoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mid(), output);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mtype(), output);
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->remainplayer(), output);
  }

  // int32 result = 5;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.JoinMatchRS)
}

::google::protobuf::uint8* JoinMatchRS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.JoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mid(), target);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mtype(), target);
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->remainplayer(), target);
  }

  // int32 result = 5;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.JoinMatchRS)
  return target;
}

size_t JoinMatchRS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.JoinMatchRS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtype());
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remainplayer());
  }

  // int32 result = 5;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinMatchRS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.JoinMatchRS)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinMatchRS* source =
      ::google::protobuf::DynamicCastToGenerated<JoinMatchRS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.JoinMatchRS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.JoinMatchRS)
    MergeFrom(*source);
  }
}

void JoinMatchRS::MergeFrom(const JoinMatchRS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.JoinMatchRS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
  if (from.remainplayer() != 0) {
    set_remainplayer(from.remainplayer());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void JoinMatchRS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.JoinMatchRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinMatchRS::CopyFrom(const JoinMatchRS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.JoinMatchRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinMatchRS::IsInitialized() const {
  return true;
}

void JoinMatchRS::Swap(JoinMatchRS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinMatchRS::InternalSwap(JoinMatchRS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(mid_, other->mid_);
  swap(mtype_, other->mtype_);
  swap(remainplayer_, other->remainplayer_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata JoinMatchRS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnjoinMatchRQ::InitAsDefaultInstance() {
}
class UnjoinMatchRQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnjoinMatchRQ::kUidFieldNumber;
const int UnjoinMatchRQ::kMidFieldNumber;
const int UnjoinMatchRQ::kMtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnjoinMatchRQ::UnjoinMatchRQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.UnjoinMatchRQ)
}
UnjoinMatchRQ::UnjoinMatchRQ(const UnjoinMatchRQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.UnjoinMatchRQ)
}

void UnjoinMatchRQ::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
}

UnjoinMatchRQ::~UnjoinMatchRQ() {
  // @@protoc_insertion_point(destructor:CPGCommon.UnjoinMatchRQ)
  SharedDtor();
}

void UnjoinMatchRQ::SharedDtor() {
}

void UnjoinMatchRQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnjoinMatchRQ& UnjoinMatchRQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnjoinMatchRQ_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void UnjoinMatchRQ::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.UnjoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(mtype_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnjoinMatchRQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnjoinMatchRQ*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      // int32 mid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 mtype = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mtype(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnjoinMatchRQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.UnjoinMatchRQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.UnjoinMatchRQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.UnjoinMatchRQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnjoinMatchRQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.UnjoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mid(), output);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.UnjoinMatchRQ)
}

::google::protobuf::uint8* UnjoinMatchRQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.UnjoinMatchRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mid(), target);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.UnjoinMatchRQ)
  return target;
}

size_t UnjoinMatchRQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.UnjoinMatchRQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnjoinMatchRQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.UnjoinMatchRQ)
  GOOGLE_DCHECK_NE(&from, this);
  const UnjoinMatchRQ* source =
      ::google::protobuf::DynamicCastToGenerated<UnjoinMatchRQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.UnjoinMatchRQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.UnjoinMatchRQ)
    MergeFrom(*source);
  }
}

void UnjoinMatchRQ::MergeFrom(const UnjoinMatchRQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.UnjoinMatchRQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
}

void UnjoinMatchRQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.UnjoinMatchRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnjoinMatchRQ::CopyFrom(const UnjoinMatchRQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.UnjoinMatchRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnjoinMatchRQ::IsInitialized() const {
  return true;
}

void UnjoinMatchRQ::Swap(UnjoinMatchRQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnjoinMatchRQ::InternalSwap(UnjoinMatchRQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(mid_, other->mid_);
  swap(mtype_, other->mtype_);
}

::google::protobuf::Metadata UnjoinMatchRQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnjoinMatchRS::InitAsDefaultInstance() {
}
class UnjoinMatchRS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnjoinMatchRS::kUidFieldNumber;
const int UnjoinMatchRS::kMidFieldNumber;
const int UnjoinMatchRS::kMtypeFieldNumber;
const int UnjoinMatchRS::kRemainPlayerFieldNumber;
const int UnjoinMatchRS::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnjoinMatchRS::UnjoinMatchRS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.UnjoinMatchRS)
}
UnjoinMatchRS::UnjoinMatchRS(const UnjoinMatchRS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.UnjoinMatchRS)
}

void UnjoinMatchRS::SharedCtor() {
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(result_));
}

UnjoinMatchRS::~UnjoinMatchRS() {
  // @@protoc_insertion_point(destructor:CPGCommon.UnjoinMatchRS)
  SharedDtor();
}

void UnjoinMatchRS::SharedDtor() {
}

void UnjoinMatchRS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnjoinMatchRS& UnjoinMatchRS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnjoinMatchRS_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void UnjoinMatchRS::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.UnjoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnjoinMatchRS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnjoinMatchRS*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      // int32 mid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 mtype = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mtype(value);
        break;
      }
      // int32 remainPlayer = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_remainplayer(value);
        break;
      }
      // int32 result = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_result(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnjoinMatchRS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.UnjoinMatchRS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remainPlayer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remainplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.UnjoinMatchRS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.UnjoinMatchRS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnjoinMatchRS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.UnjoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mid(), output);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mtype(), output);
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->remainplayer(), output);
  }

  // int32 result = 5;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.UnjoinMatchRS)
}

::google::protobuf::uint8* UnjoinMatchRS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.UnjoinMatchRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mid(), target);
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mtype(), target);
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->remainplayer(), target);
  }

  // int32 result = 5;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.UnjoinMatchRS)
  return target;
}

size_t UnjoinMatchRS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.UnjoinMatchRS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 mid = 2;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 mtype = 3;
  if (this->mtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtype());
  }

  // int32 remainPlayer = 4;
  if (this->remainplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remainplayer());
  }

  // int32 result = 5;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnjoinMatchRS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.UnjoinMatchRS)
  GOOGLE_DCHECK_NE(&from, this);
  const UnjoinMatchRS* source =
      ::google::protobuf::DynamicCastToGenerated<UnjoinMatchRS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.UnjoinMatchRS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.UnjoinMatchRS)
    MergeFrom(*source);
  }
}

void UnjoinMatchRS::MergeFrom(const UnjoinMatchRS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.UnjoinMatchRS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.mtype() != 0) {
    set_mtype(from.mtype());
  }
  if (from.remainplayer() != 0) {
    set_remainplayer(from.remainplayer());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void UnjoinMatchRS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.UnjoinMatchRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnjoinMatchRS::CopyFrom(const UnjoinMatchRS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.UnjoinMatchRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnjoinMatchRS::IsInitialized() const {
  return true;
}

void UnjoinMatchRS::Swap(UnjoinMatchRS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnjoinMatchRS::InternalSwap(UnjoinMatchRS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
  swap(mid_, other->mid_);
  swap(mtype_, other->mtype_);
  swap(remainplayer_, other->remainplayer_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata UnjoinMatchRS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchListRQ::InitAsDefaultInstance() {
}
class MatchListRQ::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchListRQ::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchListRQ::MatchListRQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.MatchListRQ)
}
MatchListRQ::MatchListRQ(const MatchListRQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:CPGCommon.MatchListRQ)
}

void MatchListRQ::SharedCtor() {
  uid_ = 0;
}

MatchListRQ::~MatchListRQ() {
  // @@protoc_insertion_point(destructor:CPGCommon.MatchListRQ)
  SharedDtor();
}

void MatchListRQ::SharedDtor() {
}

void MatchListRQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchListRQ& MatchListRQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchListRQ_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void MatchListRQ::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.MatchListRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchListRQ::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchListRQ*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchListRQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.MatchListRQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.MatchListRQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.MatchListRQ)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchListRQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.MatchListRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.MatchListRQ)
}

::google::protobuf::uint8* MatchListRQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.MatchListRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.MatchListRQ)
  return target;
}

size_t MatchListRQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.MatchListRQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchListRQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.MatchListRQ)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchListRQ* source =
      ::google::protobuf::DynamicCastToGenerated<MatchListRQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.MatchListRQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.MatchListRQ)
    MergeFrom(*source);
  }
}

void MatchListRQ::MergeFrom(const MatchListRQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.MatchListRQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void MatchListRQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.MatchListRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchListRQ::CopyFrom(const MatchListRQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.MatchListRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchListRQ::IsInitialized() const {
  return true;
}

void MatchListRQ::Swap(MatchListRQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchListRQ::InternalSwap(MatchListRQ* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uid_, other->uid_);
}

::google::protobuf::Metadata MatchListRQ::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchListRS_MatchBriefInfo::InitAsDefaultInstance() {
}
class MatchListRS_MatchBriefInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchListRS_MatchBriefInfo::kMidFieldNumber;
const int MatchListRS_MatchBriefInfo::kTypeFieldNumber;
const int MatchListRS_MatchBriefInfo::kTimeFieldNumber;
const int MatchListRS_MatchBriefInfo::kTotalPlayerFieldNumber;
const int MatchListRS_MatchBriefInfo::kRemainedPlayerFieldNumber;
const int MatchListRS_MatchBriefInfo::kStateFieldNumber;
const int MatchListRS_MatchBriefInfo::kCurLevelFieldNumber;
const int MatchListRS_MatchBriefInfo::kEntryfeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchListRS_MatchBriefInfo::MatchListRS_MatchBriefInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.MatchListRS.MatchBriefInfo)
}
MatchListRS_MatchBriefInfo::MatchListRS_MatchBriefInfo(const MatchListRS_MatchBriefInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mid_, &from.mid_,
    static_cast<size_t>(reinterpret_cast<char*>(&entryfee_) -
    reinterpret_cast<char*>(&mid_)) + sizeof(entryfee_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.MatchListRS.MatchBriefInfo)
}

void MatchListRS_MatchBriefInfo::SharedCtor() {
  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entryfee_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(entryfee_));
}

MatchListRS_MatchBriefInfo::~MatchListRS_MatchBriefInfo() {
  // @@protoc_insertion_point(destructor:CPGCommon.MatchListRS.MatchBriefInfo)
  SharedDtor();
}

void MatchListRS_MatchBriefInfo::SharedDtor() {
}

void MatchListRS_MatchBriefInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchListRS_MatchBriefInfo& MatchListRS_MatchBriefInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchListRS_MatchBriefInfo_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void MatchListRS_MatchBriefInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.MatchListRS.MatchBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entryfee_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(entryfee_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchListRS_MatchBriefInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchListRS_MatchBriefInfo*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_type(value);
        break;
      }
      // int32 time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_time(value);
        break;
      }
      // int32 totalPlayer = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_totalplayer(value);
        break;
      }
      // int32 remainedPlayer = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_remainedplayer(value);
        break;
      }
      // int32 state = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_state(value);
        break;
      }
      // int32 curLevel = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_curlevel(value);
        break;
      }
      // int32 entryfee = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_entryfee(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchListRS_MatchBriefInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.MatchListRS.MatchBriefInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 totalPlayer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remainedPlayer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remainedplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 curLevel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 entryfee = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entryfee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.MatchListRS.MatchBriefInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.MatchListRS.MatchBriefInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchListRS_MatchBriefInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.MatchListRS.MatchBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // int32 totalPlayer = 4;
  if (this->totalplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->totalplayer(), output);
  }

  // int32 remainedPlayer = 5;
  if (this->remainedplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->remainedplayer(), output);
  }

  // int32 state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  // int32 curLevel = 7;
  if (this->curlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->curlevel(), output);
  }

  // int32 entryfee = 8;
  if (this->entryfee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->entryfee(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.MatchListRS.MatchBriefInfo)
}

::google::protobuf::uint8* MatchListRS_MatchBriefInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.MatchListRS.MatchBriefInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // int32 totalPlayer = 4;
  if (this->totalplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->totalplayer(), target);
  }

  // int32 remainedPlayer = 5;
  if (this->remainedplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->remainedplayer(), target);
  }

  // int32 state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  // int32 curLevel = 7;
  if (this->curlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->curlevel(), target);
  }

  // int32 entryfee = 8;
  if (this->entryfee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->entryfee(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.MatchListRS.MatchBriefInfo)
  return target;
}

size_t MatchListRS_MatchBriefInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.MatchListRS.MatchBriefInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // int32 totalPlayer = 4;
  if (this->totalplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalplayer());
  }

  // int32 remainedPlayer = 5;
  if (this->remainedplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remainedplayer());
  }

  // int32 state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 curLevel = 7;
  if (this->curlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curlevel());
  }

  // int32 entryfee = 8;
  if (this->entryfee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entryfee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchListRS_MatchBriefInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.MatchListRS.MatchBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchListRS_MatchBriefInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MatchListRS_MatchBriefInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.MatchListRS.MatchBriefInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.MatchListRS.MatchBriefInfo)
    MergeFrom(*source);
  }
}

void MatchListRS_MatchBriefInfo::MergeFrom(const MatchListRS_MatchBriefInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.MatchListRS.MatchBriefInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.totalplayer() != 0) {
    set_totalplayer(from.totalplayer());
  }
  if (from.remainedplayer() != 0) {
    set_remainedplayer(from.remainedplayer());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.curlevel() != 0) {
    set_curlevel(from.curlevel());
  }
  if (from.entryfee() != 0) {
    set_entryfee(from.entryfee());
  }
}

void MatchListRS_MatchBriefInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.MatchListRS.MatchBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchListRS_MatchBriefInfo::CopyFrom(const MatchListRS_MatchBriefInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.MatchListRS.MatchBriefInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchListRS_MatchBriefInfo::IsInitialized() const {
  return true;
}

void MatchListRS_MatchBriefInfo::Swap(MatchListRS_MatchBriefInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchListRS_MatchBriefInfo::InternalSwap(MatchListRS_MatchBriefInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mid_, other->mid_);
  swap(type_, other->type_);
  swap(time_, other->time_);
  swap(totalplayer_, other->totalplayer_);
  swap(remainedplayer_, other->remainedplayer_);
  swap(state_, other->state_);
  swap(curlevel_, other->curlevel_);
  swap(entryfee_, other->entryfee_);
}

::google::protobuf::Metadata MatchListRS_MatchBriefInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchListRS::InitAsDefaultInstance() {
}
class MatchListRS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchListRS::kResultFieldNumber;
const int MatchListRS::kUidFieldNumber;
const int MatchListRS::kMatchListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchListRS::MatchListRS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPGCommon.MatchListRS)
}
MatchListRS::MatchListRS(const MatchListRS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      matchlist_(from.matchlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:CPGCommon.MatchListRS)
}

void MatchListRS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatchListRS_CPGCommon_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(uid_));
}

MatchListRS::~MatchListRS() {
  // @@protoc_insertion_point(destructor:CPGCommon.MatchListRS)
  SharedDtor();
}

void MatchListRS::SharedDtor() {
}

void MatchListRS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchListRS& MatchListRS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchListRS_CPGCommon_2eproto.base);
  return *internal_default_instance();
}


void MatchListRS::Clear() {
// @@protoc_insertion_point(message_clear_start:CPGCommon.MatchListRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matchlist_.Clear();
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchListRS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchListRS*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_result(value);
        break;
      }
      // int32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      // repeated .CPGCommon.MatchListRS.MatchBriefInfo matchList = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::CPGCommon::MatchListRS_MatchBriefInfo::_InternalParse;
          object = msg->add_matchlist();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchListRS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPGCommon.MatchListRS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CPGCommon.MatchListRS.MatchBriefInfo matchList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matchlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPGCommon.MatchListRS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPGCommon.MatchListRS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchListRS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPGCommon.MatchListRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // repeated .CPGCommon.MatchListRS.MatchBriefInfo matchList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->matchlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CPGCommon.MatchListRS)
}

::google::protobuf::uint8* MatchListRS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPGCommon.MatchListRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // repeated .CPGCommon.MatchListRS.MatchBriefInfo matchList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->matchlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPGCommon.MatchListRS)
  return target;
}

size_t MatchListRS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPGCommon.MatchListRS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CPGCommon.MatchListRS.MatchBriefInfo matchList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->matchlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matchlist(static_cast<int>(i)));
    }
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchListRS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPGCommon.MatchListRS)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchListRS* source =
      ::google::protobuf::DynamicCastToGenerated<MatchListRS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPGCommon.MatchListRS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPGCommon.MatchListRS)
    MergeFrom(*source);
  }
}

void MatchListRS::MergeFrom(const MatchListRS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPGCommon.MatchListRS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matchlist_.MergeFrom(from.matchlist_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void MatchListRS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPGCommon.MatchListRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchListRS::CopyFrom(const MatchListRS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPGCommon.MatchListRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchListRS::IsInitialized() const {
  return true;
}

void MatchListRS::Swap(MatchListRS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchListRS::InternalSwap(MatchListRS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&matchlist_)->InternalSwap(CastToBase(&other->matchlist_));
  swap(result_, other->result_);
  swap(uid_, other->uid_);
}

::google::protobuf::Metadata MatchListRS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CPGCommon_2eproto);
  return ::file_level_metadata_CPGCommon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CPGCommon
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::CPGCommon::JoinMatchRQ* Arena::CreateMaybeMessage< ::CPGCommon::JoinMatchRQ >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::JoinMatchRQ >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::JoinMatchRS* Arena::CreateMaybeMessage< ::CPGCommon::JoinMatchRS >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::JoinMatchRS >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::UnjoinMatchRQ* Arena::CreateMaybeMessage< ::CPGCommon::UnjoinMatchRQ >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::UnjoinMatchRQ >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::UnjoinMatchRS* Arena::CreateMaybeMessage< ::CPGCommon::UnjoinMatchRS >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::UnjoinMatchRS >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::MatchListRQ* Arena::CreateMaybeMessage< ::CPGCommon::MatchListRQ >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::MatchListRQ >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::MatchListRS_MatchBriefInfo* Arena::CreateMaybeMessage< ::CPGCommon::MatchListRS_MatchBriefInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::MatchListRS_MatchBriefInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CPGCommon::MatchListRS* Arena::CreateMaybeMessage< ::CPGCommon::MatchListRS >(Arena* arena) {
  return Arena::CreateInternal< ::CPGCommon::MatchListRS >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
